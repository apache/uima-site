<?xml version="1.0" encoding="UTF-8"?>

<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
  
  https://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<document>
  <properties>
    <title>News</title>
    <author email="dev@uima.apache.org">
      Apache UIMA Documentation Team
    </author>
  </properties>

  <body>
    <section name="Apache UIMA News">

    <subsectionToc/>

    <subsection name="02 Feb 2023" date="02 Feb 2023" title="Apache UIMA Java SDK 3.4.0 released">
      <p>
        The Apache UIMA team is happy to announce the release of the UIMA Java SDK 3.4.0.
      </p>
      
      <p>Changes include:
        <ul>
          <li>[UIMA-6474] Switch to getDataPathElements() in UIMA context</li>
          <li>Issue #226: Provide SPI interfaces to locate descriptors</li>
          <li>Issue #225: Improve deployment in OSGi environments</li>
          <li>Issue #245: Utility method for loading type systems in SPI providers</li>
          <li>Issue #247: RelativePathResolver should consider TCCL</li>
          <li>Issue #268: UIMA components log and then re-throw exceptions which usually leads to errors being logged twice</li>
          <li>Issue #252: Potential failure to look up FsGenerator3 in OSGI-like contexts</li>
          <li>Issue #265: Unable to release without auto-staging</li>
          <li>Issue #266: Unable to install UIMA 3.3.1 Eclipse Plugins in Eclipse 2022-09</li>
          <li>Issue #267: UIMA Log4jLogger_impl not compatible with log4j 2.18.0+</li>
          <li>Issue #272: select on FSArray seems broken</li>
          <li>Issue #275: Improved error message made it even more misleading</li>
          <li>Issue #285: NPE while deserializing an XMI in a PEAR context</li>
          <li>[UIMA-6440] Stage release artifacts as part of the build</li>
          <li>[UIMA-6443] Fresh Eclipse update site for every release</li>
          <li>[UIMA-6462] Avoid deploy broken checksum files for p2content.xml and artifacts.xml in feature modules</li>
          <li>[UIMA-6463] Use toolchains to ensure compatibility with Java 1.8</li>
          <li>[UIMA-6436] Move maintainer documentation from website into maintainer guide</li>
          <li>Issue #230: Remove version overrides in Maven plugin modules</li>
          <li>Issue #228: Move the UimaDecompiler class</li>
          <li>Issue #283: Update issue report generation</li>
          <li>Issue #292: Make CAS serialization tests more robust</li>
          <li>[UIMA-6459] Upgrade dependencies</li>
          <li>Issue #270: Update dependencies</li>
        </ul>
      </p>

      <p>Please see the the complete list of issues fixed in the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.4.0/issuesFixed/github-report.html">
         GitHub issue report</a> and the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.4.0/issuesFixed/jira-report.html">
         Jira issue report</a> for more details of the changes.</p>
    </subsection>

    <subsection name="21 Dec 2022" date="21 Dec 2022" title="Retirement of several Apache UIMA sub-projects">
      <p>
        The Apache UIMA team announces the retirement of 
      </p>
      <ul>
        <li>Apache UIMA Java SDK v2.x - please migrate to v3.x</li>
        <li>Apache uimaFIT v2.x - please migrate to v3.x</li>
        <li>Apache UIMA Ruta v2.x - please migrate to v3.x</li>
        <li>Apache UIMA DUCC - there is currently no replacement</li>
        <li>Apache UIMA AS v2.x - there is currently no replacement</li>
      </ul>
    </subsection>
    
    <subsection name="31 Oct 2022" date="31 Oct 2022" title="Apache UIMA Java SDK 3.3.1 released">
      <p>
        The Apache UIMA team is happy to announce the release of the UIMA Java SDK 3.3.1.
      </p>
      
      <p>Changes include:
        <ul>
          <li>Issue #255: File handle leak accessing performanceTuning.properties</li>
          <li>Issue #240: Helper annotation created by SelectFS should not survive</li>
          <li>Issue #238: Form 6 serializes non-reachable FSes but should not</li>
          <li>Issue #235: Misleading error message when JCas type is not registered</li>
          <li>[UIMA-6479] PearPackagingMavenPlugin has ancient JUnit dependency</li>
          <li>[UIMA-6473] CasToComparableText is broken</li>
          <li>Issue #222: Support comparing test files irrespective of line endings</li>
          <li>[UIMA-6480] Add tests with empty arrays to CAS de/ser-suite</li>
          <li>[UIMA-6454] Update dependencies</li>
          <li>[UIMA-6463] Use toolchains to ensure compatibility with Java 1.8</li>
          <li>[UIMA-6469] Cleaning up file handling code</li>
        </ul>
      </p>

      <p>Please see the the complete list of issues fixed in the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.3.1/issuesFixed/github-report.html">
         GitHub issue report</a> and the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.3.1/issuesFixed/jira-report.html">
         Jira issue report</a> for more details of the changes.</p>
    </subsection>
    
    
    <subsection name="06 Aug 2022" date="06 Aug 2022" title="Apache UIMA Java JSON CAS I/O">
      <p>
        The JSON CAS I/O implementation for use with the UIMA Java SDK allows to serialize UIMA CAS 
        data to JSON and to de-serialize the data back from JSON again, loading it into a CAS object. 
        The aim of this library is to facilitate the data interoperability of UIMA data across 
        different platform and programming languages. For example, the implementation contains 
        functionality to deal with the different character offset counting strategies used by 
        different languages such as Java and Python. A Python-based implementation of the UIMA 
        JSON CAS format is available as part of the third-party 
        <a target="_blank" rel="noopener"  href="https://github.com/dkpro/dkpro-cassis">DKPro Cassis</a> library.
      </p>
      <p>
        This is the first public release based on the JSON serialization of the Apache UIMA CAS 
        draft specification version 0.4.0. Please note that the implementation and the specification
        are not yet final. For this reason, is not yet recommended to use this library in scenarios
        where data needs to be stored or archived over an extended period of time as future versions
        of the implementation and specification may introduce incompatibilities with the current
        version. Good usage scenarios are for example short-term data exchange between different
        UIMA implementations such as for example in network communication.
      </p>
      <p>
        A full list of issues addressed in this release can be found on the 
        <a target="_blank" rel="noopener" href="https://issues.apache.org/jira/issues/?jql=project%20%3D%20UIMA%20AND%20fixVersion%20%3D%200.4.0jsoncas">issue tracker.</a>
      </p>
      <p>
        Please use the <a target="_blank" rel="noopener" href="https://uima.apache.org/mail-lists.html">
        mailing lists</a> for feedback and the <a target="_blank" rel="noopener" href="https://github.com/apache/uima-uimaj-io-jsoncas/issues">issue 
        tracker</a> to report bugs.
      </p>
    </subsection>

    <subsection name="28 Jun 2022" date="28 Jun 2022" title="Apache UIMA Ruta 3.2.0 released">
      <p>
        The Apache UIMA team is happy to announce the release of Ruta 3.2.0.
      </p>
      
      <p>Changes include:
        <ul>
          <li>[UIMA-6411] - Avoid creation of `RutaBasics` for bad annotations</li>
          <li>[UIMA-6406] - Removing an annotation inside a `BLOCK` only takes effect outside the block</li>
          <li>[UIMA-6408] - No type check of features in `TRANSFER`</li>
          <li>[UIMA-6409] - Possible endless wildcard lookahead in combination with subtokens</li>
          <li>[UIMA-6414] - Missing match for optional after sidestep out of composed</li>
          <li>[UIMA-6404] - `@` with quantifier ignores matches</li>
          <li>[UIMA-6405] - Local variable not captured properly in a wildcard matching condition.</li>
          <li>[UIMA-6461] - Wrong argument to `contains()`</li>
          <li>[UIMA-6399] - `RutaPatternCache` prevents `CPEEngine` from terminating</li>
          <li>[UIMA-6383] - TRIE - Wordlist entry not annotated</li>
          <li>[UIMA-6394] - Label assignment in alternative match causes problems</li>
        </ul>
      </p>

      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-3.2.0/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>
    
    <subsection name="03 Jun 2022" date="03 Jun 2022" title="Apache UIMA uimaFIT 3.3.0 released">
      <p>
        The Apache UIMA team is happy to announce the release of uimaFIT 3.3.0.
      </p>
      
      <p>Changes include:
        <ul>
          <li>[UIMA-6431] - Use lambda functions as CAS processors</li>
          <li>[UIMA-6422] - `FSUtil.setFeature()` should offer signatures that accept a Feature</li>
          <li>[UIMA-6392] - Better delegate key generation in aggregate engine</li>
          <li>[UIMA-6424] - Upgrade uimaFIT to JUnit 5</li>
          <li>[UIMA-6426] - Upgrade to UIMA Java SDK 3.3.0</li>
          <li>[UIMA-6432] - Upgrade dependencies (uimaFIT 3.3.0)</li>
          <li>[UIMA-6384] - Parallelism argument in `CpePipeline` is ignored</li>
          <li>[UIMA-6385] - Potential resource key clash in environments with multiple classloaders</li>
          <li>[UIMA-6391] - `CpePipeline` should kill CPE if reader throws exception</li>
          <li>[UIMA-6396] - uimaFIT maven plugin mixes up test and compile scopes</li>
          <li>[UIMA-6417] - Problems setting numeric parameter values</li>
          <li>[UIMA-6446] - Complexities around enhancing classes with their resource name</li>
        </ul>
      </p>

      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimafit-3.3.0/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>

    <subsection name="09 May 2022" date="09 May 2022" title="Apache UIMA Java SDK 3.3.0 released">
      <p>
        The Apache UIMA team is happy to announce the release of the UIMA Java SDK 3.3.0.
      </p>
      
      <p>Changes include:
        <ul>
          <li>[UIMA-6418] Added support for component parameters of type "long" and "double"</li>
          <li>[UIMA-6358] Added platform-independent methods for setting the datapath in a resource manager</li>
          <li>[UIMA-6374] Added an extensive CAS (de)serialization test suit</li>
          <li>[UIMA-6431] Added support for using lambda functions as CAS processors</li>
          <li>[UIMA-6412] Changed CPMEngine from using a thread group to using an executor service</li>
          <li>[UIMA-6389] Fixed exceptions being swallowed when using Log4J2 through its SLF4J API</li>
          <li>[UIMA-6386] Fixed wrong UIMA session being set on the ConfigurationManager in aggregates</li>
          <li>[UIMA-6390] Fixed NPE when trying to access config names of fresh context</li>
          <li>[UIMA-6378] Fixed build on Java 16</li>
          <li>[UIMA-6393] Fixed circular imports in descriptors breaking the resource manager cache</li>
          <li>[UIMA-6367] Fixed JCas cover annotation created in PEAR context being replaced by index operations</li>
          <li>[UIMA-6388] Fixed CAS.select(null) returning all annotations instead of throwing an exception</li>
          <li>[UIMA-6423] Fixed selecting a non-existing type returning all types instead of throwing an exception</li>
          <li>[UIMA-6421] Fixed range check when injecting a String value into StringArray slot to throw an exception</li>
          <li>[UIMA-6400] Fixed leaking ThreadLocal in UimaContextHolder</li>
          <li>[UIMA-6398] Fixed memory leak in UIMA loggers and loggers using the wrong classloader for i18n messages</li>
          <li>[UIMA-6413] Fixed memory leak in FSClassRegistry</li>
          <li>[UIMA-6377] Fixed spurious multipleReferencesAllowed warning when serializing empty arrays</li>
          <li>[UIMA-6372] Upgraded to JUnit 5</li>
          <li>[UIMA-6373] Format UIMA Core Java SDK codebase</li>
        </ul>
      </p>

      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.3.0/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>
    
    <subsection name="02 July 2021" date="02 July 2021" title="Apache UIMA Java SDK 2.11.0 released">
      <p>UIMA Java SDK 2.11.0 is in the 2.x.x series of core Java UIMA SDK; the latest series is 3.x.x; 
        see the news for 3.0.0 for important information about migrating from 2.x.x versions of UIMA.
      </p>
      
      <p>Changes include:
        <ul>
          <li>Added ability to serialize as XMIs as XML 1.1</li>
          <li>Added typed parameter support to PEARs</li>
          <li>Improved speed of constructing aggregate engines</li>
          <li>Fixed deep cloning of AnalysisEngineDescription</li>
          <li>Fixed bug causing Annotation to be returned when asking JCas for a specific type</li>
          <li>Fixed ability to install PEARs into directories containing XML special characters in the name</li>
          <li>Fixed index protection for cases that no FSes were indexed</li>
          <li>No longer ship Pack200-compressed versions of the Eclipse plugins</li>
        </ul>
      </p>

      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.11.0/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>    
    
    <subsection name="18 May 2020" date = "18 May 2020" title="Apache UIMA Ruta 3.1.0 released">
      <p>Apache UIMA Ruta is a rule-based script language supported by
        Eclipse-based tooling. The language is designed to enable rapid
        development of text processing applications within UIMA. A special focus
        lies on the intuitive and flexible domain specific language for defining
        patterns of annotations. The Eclipse-based tooling,
        called the Apache UIMA Ruta Workbench, supports the
        user and facilitates every step when writing rules. Both
        the rule language and the workbench integrate
        smoothly with Apache UIMA.
      </p>
      <p>Major Changes in this Release</p>
      <p>
        This release provides compatibility to UIMA v3. 
        An upgrade from UIMA Ruta v2 to this version 
        requires also an update to UIMA v3 of the overall application and/or Eclipse installation. 
        Please refer to the UIMA v3 user's guide for detailed information: 
        https://uima.apache.org/d/uimaj-3.2.0/version_3_users_guide.html
      </p>
      <p>
        <p>UIMA Ruta Language and Analysis Engine:</p>
        <ul>
          <li>New config parameter for internal indexing strategy.</li>
          <li>New config parameter for indexing all debug information.</li>
          <li>New config parameter for type disambiguation.</li>
          <li>TextSeeder is the new default seeder (faster, no MARKUP annotations).</li>
          <li>Improved null check using label expression.</li>
          <li>Improved conjunctive and disjunctive rule elements.</li>
          <li>Improved conjunct rules.</li>
          <li>Improved implementation of SPLIT, FILL, ADD, REMOVE, AFTER.</li>
          <li>Improved documentation.</li>
        </ul>
        <p>UIMA Ruta Workbench:</p>
        <ul>
          <li>Fixed problems launching script using newer Java versions (LayerInstantiationException).</li>
          <li>Fixed console logging when launching scripts.</li>
          <li>Improved compatibility with dark mode.</li>
        </ul>
        <p>UIMA Ruta Maven Plugin:</p>
        <ul>
          <li>Fail on error by default.</li>
        </ul>
      </p>
      
      <p>For a complete list of bugs and improvements included in this release please see
      <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-3.1.0/issuesFixed/jira-report.html">issue report</a>.
      </p>
    </subsection>
    
    <subsection name="06 May 2021" date="06 May 2021" title="Apache uimaFIT 3.2.0 released">
      <p>
        uimaFIT 3.2.0 is a feature and bugfix release. On supported platforms, it serves mostly as 
        a drop-in replacement for previous uimaFIT 3.x versions. However, the behavior of the various
        select methods was slightly adapted in edge cases to align with the update behavior of the
        UIMA Java SDK SelectFS API.  For details, please refer to the migration section in the
        documentation in the Apache UIMA Java SDK 3.2.0.
      </p>
      
      <p>Changes include:
        <ul>
          <li>Added pluggable CAS validation support</li>
          <li>Added selectOverlapping to (J)CasUtil</li>
          <li>Added ability to Maven plugin to add generated resource folder as Maven resource folder</li>
          <li>Added typed PEAR parameter support</li>
          <li>Improved overhead of createTypeSystemDescription() and friends</li>
          <li>Improved compatibiltiy of the uimaFIT select-methods with the UIMA Java SDK SelectFS API</li>
          <li>Improved performance of selectCovering</li>
          <li>Fixed Maven plugin failing to import type systems from dependencies</li>
          <li>Fixed detection and usage of proper classloader e.g. for resolving imports</li>
          <li>Several additional bug fixes</li>
        </ul>
      </p>

      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimafit-3.2.0/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>
    
    <subsection name="03 May 2021" date="03 May 2021" title="Apache UIMA Java SDK 3.2.0 released">
      <p>UIMA Java SDK 3.2.0 is in the 3.x.x series of core Java UIMA SDK; see the news for 3.0.0 for important
         information about migrating from 2.x.x versions of UIMA.
      </p>
      
      <p>Changes include:
        <ul>
          <li>Added AnnotationPredicates utility class providing various predicates testing how annotations
              relate to each other (e.g. covering, being covered by, following, preceding, etc.)</li>
          <li>Added single-int arg version of select.startAt()</li>
          <li>Added trim method to AnnotationFS</li>
          <li>Added ability to serialize as XMIs as XML 1.1</li>
          <li>Added ability to serialize as XMIs pretty-printed using CasIOUtils</li>
          <li>Added typed parameter support to PEARs</li>
          <li>Improve performance of setting up JCas classes by reducing sync lock contention</li>
          <li>Improved speed of constructing aggregate engines</li>
          <li>Many additional bug fixes</li>
        </ul>
      </p>

      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.2.0/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>
    
    <subsection name="12 May 2020" date = "12 May 2020" title="Apache uimaFIT 3.1.0 released">
      <p>uimaFIT 3.1.0 is a minor feature and bugfix release. On supported platforms, it serves
      mostly as a drop-in replacement for previous uimaFIT 3.x versions. However, due to a clash in
      method signatures, you may notice incompatible changes in the methods provided 
      ExternalResourceFactory. For details, please refer to the migration section in the 
      documentation.</p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimafit-3.1.0/issuesFixed/jira-report.html">here</a>.
      </p>
      <p>Notable changes in this release include:</p>
      <ul>
        <li>Added support for PEARs in AnalysisEngineFactory</li>
        <li>Added ExternalResourceFactory.createResource(...) methods for instantiating resources</li>
        <li>Added support for Charset-typed parameters in components</li>
        <li>Added ability to set number of threads in CpePipeline.runPipeline(...)</li>
        <li>Fixed issue with non-XML 1.0 characters in parameter values when running CPEs</li>
        <li>Fixed JCasIterable.iterator() destroying the ResourceManager before it is even used</li>
        <li>Fixed issue causing component parameters to be used when initializing resources</li>
        <li>Fixed CollectionReaderFactory.createReaderDescription(...) not discovering type prios and indexes</li>
        <li>Fixed clashing method signatures of ExternalResourceFactory.bindResource(...)</li>
        <li>Upgraded to UIMA 3.1.1</li>
        <li>Upgraded to Spring 4.3.26</li>
      </ul>
      <p>
      This version of uimaFIT requires Java version 8 or later.
      </p>
    </subsection>
    
    <subsection name="26 Apr 2020" date = "26 Apr 2020" title="Apache uimaFIT 2.5.0 released">
      <p>uimaFIT 2.5.0 is a minor feature and bugfix release to uimaFIT 2.4.0. It should should 
      serve as a drop-in replacement for previous uimaFIT 2.x versions.</p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimafit-2.5.0/issuesFixed/jira-report.html">here</a>.
      </p>
      <p>Notable changes in this release include:</p>
      <ul>
        <li>Added support for PEARs in AnalysisEngineFactory;</li>
        <li>Added support for destroying auto-created resource managers if feasible;</li>
        <li>Added CasFactory;</li>
        <li>Added CasUtil.exists(...) method;</li>
        <li>Added support for Charset-typed parameters in components;</li>
        <li>Added ExternalResourceFactory.createResource(...) methods for instantiating resources;</li>
        <li>Added ability to set number of threads in CpePipeline.runPipeline(...);</li>
        <li>Fixed FSUtil.getFeature(...) failing when called with Object.class on multi-valued features;</li>
        <li>Fixed issue with non-XML 1.0 characters in parameter values when running CPEs;</li>
        <li>Fixed JCasIterable.iterator() destroying the ResourceManager before it is even used;</li>
        <li>Fixed CollectionReaderFactory.createReaderDescription(...) not discovering type prios and indexes;</li>
        <li>Fixed issue causing component parameters to be used when initializing resources;</li>
        <li>Upgraded to UIMA 2.10.4;</li>
        <li>Upgraded to Spring 4.3.26.</li>
      </ul>
      <p>
      This version of uimaFIT requires Java version 8 or later.
      </p>
    </subsection>
        
    <subsection name="17 Apr 2020" date = "17 April 2020" title="Apache UIMA Ruta 3.0.1 released">
      <p>Apache UIMA Ruta is a rule-based script language supported by
        Eclipse-based tooling. The language is designed to enable rapid
        development of text processing applications within UIMA. A special focus
        lies on the intuitive and flexible domain specific language for defining
        patterns of annotations. The Eclipse-based tooling,
        called the Apache UIMA Ruta Workbench, supports the
        user and facilitates every step when writing rules. Both
        the rule language and the workbench integrate
        smoothly with Apache UIMA.
      </p>
      <p>Major Changes in this Release</p>
      <p>
        This release provides compatibility to UIMA v3 with the functionality of the version 2.8.1. 
        An upgrade from UIMA Ruta v2 to this version 
        requires also an update to UIMA v3 of the overall application and/or Eclipse installation. 
        Please refer to the UIMA v3 user's guide for detailed information: 
        https://uima.apache.org/d/uimaj-3.1.1/version_3_users_guide.html
      </p>
      <p>Major Changes in this Release</p>
      <ul>
        <li>Fixed broken literal string matching.</li>
        <li>Fixed variable initialization with other variables.</li>
        <li>Fixed assignment of lists to variables.</li>
        <li>Fixed assignment of annotation comparison expression to variables.</li>
        <li>PARSE condition supports additional argument that represents the string to be parsed.</li>
      </ul>
      
      <p>
      The UIMA Ruta Workbench and in particular the launching of UIMA Ruta
        script in simple UIMA Ruta projects faces some incompatibilities with
        newer Java versions. Please refer to the UIMA mailing lists for known
        workarounds.
      </p>
      
      <p>For a complete list of bugs and improvements included in this release please see
      <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-3.0.1/issuesFixed/jira-report.html">issue report</a>.
      </p>
    </subsection>
    
    <subsection name="11 Apr 2020" date = "11 April 2020" title="Apache UIMA Ruta 2.8.1 released">
      <p>Apache UIMA Ruta is a rule-based script language supported by
        Eclipse-based tooling. The language is designed to enable rapid
        development of text processing applications within UIMA. A special
        focus lies on the intuitive and flexible domain specific language for defining
        patterns of annotations. The Eclipse-based tooling,
        called the Apache UIMA Ruta Workbench, was created to support the
        user and to facilitate every step when writing rules. Both
        the rule language and the workbench integrate
        smoothly with Apache UIMA. 
      </p>
      <p>Major Changes in this Release</p>
    <ul>
      <li>Fixed broken literal string matching.</li>
      <li>Fixed variable initialization with other variables.</li>
      <li>Fixed assignment of lists to variables.</li>
      <li>Fixed assignment of annotation comparison expression to variables.</li>
      <li>PARSE condition supports additional argument that represents the string to be parsed.</li>
    </ul>
 
      <p>
      The UIMA Ruta Workbench and in particular the launching of UIMA Ruta
        script in simple UIMA Ruta projects faces some incompatibilities with
        newer Java versions. Please refer to the UIMA mailing lists for known
        workarounds.
      </p>
      
      <p>For a complete list of bugs and improvements included in this release please see
      <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.8.1/issuesFixed/jira-report.html">issue report</a>.
      </p>
    </subsection>
    
    
    <subsection name="09 Dec 2019" date = "09 December 2019" title="Apache UIMA Ruta 3.0.0 released">
      <p>Apache UIMA Ruta is a rule-based script language supported by
    Eclipse-based tooling. The language is designed to enable rapid
    development of text processing applications within UIMA. A special focus
    lies on the intuitive and flexible domain specific language for defining
    patterns of annotations. The Eclipse-based tooling,
    called the Apache UIMA Ruta Workbench, supports the
    user and facilitates every step when writing rules. Both
    the rule language and the workbench integrate
    smoothly with Apache UIMA.
      </p>
      <p>Major Changes in this Release</p>
      <p>
        This release provides compatibility to UIMA v3 with the functionality of the version 2.8.0. 
        An upgrade from UIMA Ruta v2 to this version 
        requires also an update to UIMA v3 of the overall application and/or Eclipse installation. 
        Please refer to the UIMA v3 user's guide for detailed information: 
        https://uima.apache.org/d/uimaj-3.0.0/version_3_users_guide.html
      </p>
      <p>
        This release contains changed in the analysis engine descriptor and the type system descriptors 
        and therefore requires an update of the Ruta projects. This can be accomplished for example by 
        right-click on the Ruta project, selecting "UIMA Ruta" and then "Update Project".
      </p>
      <p>UIMA Ruta Language and Analysis Engine:</p>
      <ul>
        <li>Depends on UIMA 3.1.1 and uimaFIT 3.0.0</li>
        <li>Provides compatibility to UIMA v3</li>
      </ul>
      <p>UIMA Ruta Workbench:</p>
      <ul>
        <li>Depends on UIMA v3 and provides compatibility to UIMA v3</li>
      </ul>
      
      <p>For a complete list of bugs and improvements included in this release please see
      <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-3.0.0/issuesFixed/jira-report.html">issue report</a>.
      </p>
    </subsection>
    
    <subsection name="28 Nov 2019" date = "28 November 2019" title="Apache UIMA Ruta 2.8.0 released">
      <p>Apache UIMA Ruta is a rule-based script language supported by
        Eclipse-based tooling. The language is designed to enable rapid
        development of text processing applications within UIMA. A special
        focus lies on the intuitive and flexible domain specific language for defining
        patterns of annotations. The Eclipse-based tooling,
        called the Apache UIMA Ruta Workbench, was created to support the
        user and to facilitate every step when writing rules. Both
        the rule language and the workbench integrate
        smoothly with Apache UIMA. 
      </p>
      <p>Major Changes in this Release</p>
      <p>
        This release contains changed in the analysis engine descriptor and the type system descriptors 
        and therefore requires an update of the Ruta projects. This can be accomplished for example by 
        right-click on the Ruta project, selecting "UIMA Ruta" and then "Update Project".
      </p>
      <p>UIMA Ruta Language and Analysis Engine:</p>
      <ul>
        <li>The analysis engine is able to generate debug information about inlined rules which includes also an extension of the ruta type system.</li>
        <li>Type expressions in dot notation for annotation expressions a new supported: a1:ANY a2:ANY{a1.type==a2.type -> Type};</li>
        <li>Matching on string literals is no more restricted to single RutaBasic annotations, e.g., it is now possible to write: "This is a test"{-> Test};</li>
        <li>Dictionary matching is now more robust concerning white spaces in the word list. The parameter dictRemoveWS is now also set to true by default.</li>
        <li>Fixed anchors at composed rule elements.</li>
        <li>Labels at macro actions are supported now.</li>
        <li>Fixed several bugs.</li>
      </ul>
      <p>UIMA Ruta Workbench:</p>
      <ul>
        <li>New view for visualizing the explanation of inlined rules.</li>
        <li>Fixed problem with blocked build processes in Ruta projects with many scripts.</li>
        <li>Fixed bugs.</li>
      </ul>
      
      <p>For a complete list of bugs and improvements included in this release please see
      <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.8.0/issuesFixed/jira-report.html">issue report</a>.
      </p>
    </subsection>
    
    <subsection name="08 Nov 2019" date = "08 Nov 2019" title="Apache UIMA Java SDK 3.1.1 released">
      <p>UIMA Java SDK 3.1.1 is in the 3.x.x series of core Java UIMA SDK; see the news for 3.0.0 for important
         information about migrating from 2.x.x versions of UIMA.
      </p>
      
      <p>Changes include:
         <ul><li>Build updates to build from the GIT repositories, after the uimaj project's SCM was moved
            from SVN to GitHub.</li>
            <li>Fixed a performance issue when running with 100's of CASes using the same type system.</li>
         </ul>
      </p>

      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.1.1/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>
    
    <subsection name="15 Aug 2019" date = "15 Aug 2019" title="Apache UIMA Java SDK 3.1.0 released">
      <p>UIMA Java SDK 3.1.0 is in the 3.x.x series of core Java UIMA SDK; see the news for 3.0.0 for important
         information about migrating from 2.x.x versions of UIMA.
      </p>
      
      <p>Changes include:
         <ul><li>JCasGen now generates FSArray values with generic types, if the component type is specified.
            This change was responsible for bumping up the middle number of the version spec.</li>
            
            <li>Fixes to allow the Eclipse plugin for the Component Descriptor Editor to run with the latest Eclipse version.</li>
            <li>Improved support of 0-length typed FSArrays</li>
          </ul>
      </p>

      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.1.0/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>
    

   <subsection name="09 Aug 2019" date = "09 August 2019" title="Apache UIMA Java SDK 2.10.4 released">

      <p>This is a minor bug fix release.
      The major changes in this release include:</p>

      <ul><li>The Eclipse plugin for the Component Descriptor editor was fixed to work with
      the latest version of Eclipse.</li>
          <li>Internationalized Exceptions more reliably find their message bundles.</li>
          <li>An additional use case for running pipeline within pipelines is now supported.</li>
          <li>An override was added to enable using External DTDs in XML descriptors.</li>
          <li>The destroy cleanups around PEARs was improved.</li>
      </ul>                                                                                        
      
      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.10.4/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>

    <subsection name="26 Apr 2019" date = "26 Apr 2019" title="Apache UIMA DUCC 3.0.0 released">
 <p>DUCC stands for Distributed UIMA Cluster Computing. DUCC is a cluster management system providing tooling,                                                                                                                                  
management, and scheduling facilities to automate the scale-out of applications written to the UIMA framework.                                                                                                                                  
Core UIMA provides a generalized framework for applications that process unstructured information such as human                                                                                                                                 
language, but does not provide a scale-out mechanism. UIMA-AS provides a scale-out mechanism to distribute UIMA                                                                                                                                 
pipelines over a cluster of computing resources, but does not provide job or cluster management of the resources.                                                                                                                               
DUCC defines a formal job model that closely maps to a standard UIMA pipeline. Around this job model DUCC                                                                                                                                       
provides cluster management services to automate the scale-out of UIMA pipelines over computing clusters.                                                                                                                                       
 </p>
      <p>                                                                                                                                                                                                                                       
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-ducc-3.0.0/issuesFixed/jira-report.html">here</a>.                                                                                                                                          
      </p>
        <p>The major changes in this release are:</p>
        <ul>
          <li>Support for UIMA v2 and v3</li>
          <li>Created new pull service that can be run with or without DUCC </li>
          <li>Enable DUCC to run without shared file system </li>
          <li>Add new DUCC stop options, including quiesce </li>
          <li>Add "CASes processed" to annotator performance metrics </li>
          <li>Upgraded to Cassandra Server v.3.11.3, Cassandra Driver v.3.6.0, Jetty 
v.9.4.14.v20181114, guava v.18.0, joda v.2.4, commons.lang v.3.1, 
commons.math v.3.2, netty v.4.0.44, snappy v.1.1.1.7 </li>
          <li>Other bug fixes</li>

        </ul>
      <p>                                                                                                                                                                                                                                       
      This version of UIMA-DUCC requires Java version 8.                                                                                                                                                                                        
      </p>
    </subsection>

    <subsection name="16 Apr 2019" date = "16 April 2019" title="Apache uimaFIT 3.0.0 released">
      <p>uimaFIT 3.0.0 is a major release compatible with UIMA v3. It includes a few changes in the
      API which do not make it a drop-in replacement - minor changes to your code may be required
      when you upgrade.
      </p>
      
      <p>The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimafit-3.0.0/issuesFixed/jira-report.html">here</a>.
      </p>
      <p>The major changes in this release are:</p>
      <ul>
        <li>Upgrade to UIMA 3.0.2.</li>
        <li>Requires Java 8</li>
        <li>New CasFactory (equivalent to JCasFactory but for the CAS API).</li>
        <li>Added CasUtil.exists() method.</li>
        <li>Added CasUtil.selectSingleFS() method.</li>
        <li>Use List instead of Collection in return types where possible.</li>
        <li>Fixed problem that different signatures of createExternalResourceDescription shadow
            each other.</li>
        <li>Destroy auto-created resource managers if feasible</li>
        <li>Upgraded dependencies</li>
       </ul>
      <p>
      This version of uimaFIT requires Java version 8 or later.
      </p>
    </subsection>

    <subsection name="10 Apr 2019" date = "10 April 2019" title="Apache UIMA Java SDK 3.0.2 released">
      <p>UIMA Java SDK 3.0.2 is in the 3.x.x series of core Java UIMA SDK; see the news for 3.0.0 for important
         information about migrating from 2.x.x versions of UIMA.
      </p>
      
      <p>Changes include:
         <ul><li>Better backwards binary compatibility with UIMA version 2, to allow more migrations 
             to happen without recompiling user code (except for JCas classes).</li>
             
             <li>Some bug fixes, especially around the subiterator, for edge cases.</li>
          </ul>
      </p>

      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.2/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>

    <subsection name="24 Feb 2019" date = "24 February 2019" title="Apache UIMA Ruta 2.7.0 released">
      <p>Apache UIMA Ruta is a rule-based script language supported by
        Eclipse-based tooling. The language is designed to enable rapid
        development of text processing applications within UIMA. A special
        focus lies on the intuitive and flexible domain specific language for defining
        patterns of annotations. The Eclipse-based tooling,
        called the Apache UIMA Ruta Workbench, was created to support the
        user and to facilitate every step when writing rules. Both
        the rule language and the workbench integrate
        smoothly with Apache UIMA. 
      </p>
      <p>Major Changes in this Release</p>
      <p>UIMA Ruta Language and Analysis Engine:</p>
    <ul>
      <li>Requires Java 8</li>
      <li>New language feature: label expressions at actions for directly assigning/reusing newly created annotations. Example: Document{-> a:T1, CREATE(T2, "ref" = a)};</li>
      <li>New language feature: new type of rule element for completely optional match which does not require an existing annotation and therefore also works at the boundary of a window/document. Example: NUM _{-PARTOF(CW)};</li>
      <li>Type lists can be used as matching condition.</li>
      <li>Initial default value of string and annotations variables is now null.</li>
      <li>Comparison of annotation and annotation list are now supported.</li>
      <li>New configuration parameter 'inferenceVisitors'.</li>
      <li>New configuration parameter 'maxRuleMatches'.</li>
      <li>New configuration parameter 'maxRuleElementMatches'.</li>
      <li>New configuration parameter 'rulesScriptName'.</li>
      <li>Inlined rules as condition are only evaluated if the rule element match was successful.</li>
      <li>Multiple inlined rule blocks are allowed at one rule element.</li>
      <li>String features with allowed values are supported.</li>
      <li>PlainTextAnnotator supports vertical tabs.</li>
      <li>Various improvements for WORDTABLE.</li>
      <li>Thrown exceptions include script name.</li>
      <li>Fixed values of label for failed matches.</li>
      <li>Fixed inlined rules as condition at wildcards.</li>
      <li>Fixed resetting of annotation-based variables.</li>
      <li>Fixed various bugs of wildcards.</li>
      <li>Fixed CONTAINS condition for annotations overlapping the window.</li>
      <li>Fixed COUNT condition.</li>
      <li>Fixed setting variables by configuration parameter.</li>
    </ul>
    <p>UIMA Ruta Workbench:</p>
    <ul>
      <li>Query View support more CAS formats.</li>
      <li>Fixed order of scripts in Applied Rules view.</li>
      <li>Fixed reporting of non-existing problems in editor.</li>
    </ul>
      
      <p>For a complete list of bugs and improvements included in this release please see
      <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.7.0/issuesFixed/jira-report.html">issue report</a>.
      </p>
    </subsection>


    <subsection name="29 Nov 2018a" date = "29 November 2018" title="Apache UIMA Java SDK 3.0.1 released">
      <p>UIMA Java SDK 3.0.1 is in the 3.x.x series of core Java UIMA SDK; see the news for 3.0.0 for important
         information about migrating from 2.x.x versions of UIMA.
      </p>
      
      <p>Changes include:
         <ul><li>The code and the build was adjusted to compile using both Java 8 and Java 11.</li>
             <li>The class loading when using the UIMA Class Loader now 
                 will first try loading from that class loader's URL list, 
                 and if not found will try using the Context Class Loader (if set), and if not found, 
                 then will default to how it previously searched for classes. 
                 Previously the Context Class Loader was never consulted.</li>
             <li>The PEAR installation no longer lock files.</li>
             <li>Pear Specifier parameters now passed to the wrapped Analysis Engine</li>
             <li>A destroy() method was added to the ResourceManager which closes its UIMAClassLoader</li>
          </ul>
      </p>
      <p>Specific changes in this release unique to version 3 include:
         <ul><li>Multiple small adjustments for edge cases for the select framework, to make it match what uimaFIT does.</li>
             <li>Bug fixes for several of the select methods, with associated documentation and javadoc updates/fixes</li>
       </ul>
      </p>

      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.1/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
              
    </subsection>

   <subsection name="29 Nov 2018b" date = "29 November 2018" title="Apache UIMA Java SDK 2.10.3 released">

      <p>This is a minor bug fix release.
      The major changes in this release include:</p>

      <ul><li>The minimum Java version was changed from 7 to 8.  The code and the build
              was adjusted to compile using both Java 8 and Java 11.</li>
          <li>The class loading when using the UIMA Class Loader now will first try loading
              from that class loader's URL list, and if not found will try using the
              Context Class Loader (if set), and if not found, then will delegate to the parent.
              Previously the Context Class Loader was never consulted.</li>
          <li>Fixed some edge case performance issues.</li>
          <li>Fixed PEAR installation to no longer lock files.</li>
          <li>Pear Specifier parameters now passed to the wrapped Analysis Engine</li>
          <li>Implemented a destroy() method for ResourceManager which closes its UIMAClassLoader</li>
      </ul>                                                                                        
      
      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.10.3/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>

   <subsection name="27 Apr 2018" date = "27 Apr 2018" title="Apache UIMA ConceptMapper addon 2.10.2 released">
      <p>UIMA ConceptMapper 2.10.2 updates the Concept Mapper, one of the annotators in the Addons, to use the 
      current UIMA APIs, allows configuration inputs to come from Jars on the classpath, and adds buffering to the I/O
      for compiled dictionaries.
      </p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-addons/ConceptMapper-2.10.2/issuesFixed/jira-report.html">here</a>.
      </p>

    </subsection>

    <subsection name="17 Apr 2018" date = "17 Apr 2018" title="Apache UIMA Asynchronous Scaleout (UIMA-AS) 2.10.3 released">
      <p>UIMA AS 2.10.3 is a maintenance release that contains fixes and improvements over UIMA-AS 2.10.2.
      </p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-as-2.10.3/issuesFixed/jira-report.html">here</a>.
      </p>
        <p>The major changes in this release are:</p>
        <ul>
          <li>Modified client code to assign unique ClientID to broker connection</li>
          <li>Fixed ClassCastException when async aggregate initializes delegate with JMS Service Descriptor</li>
          <li>Fixed broken classpath and logging for UIMA-AS run configurations</li>
         </ul>
      <p>
      This version of UIMA-AS requires Java version 8 or later.      
      </p>

    </subsection>


    <subsection name="19 Mar 2018" date = "19 Mar 2018" title="Apache UIMA DUCC 2.2.2 released">
 <p>DUCC stands for Distributed UIMA Cluster Computing. DUCC is a cluster management system providing tooling,
management, and scheduling facilities to automate the scale-out of applications written to the UIMA framework.
Core UIMA provides a generalized framework for applications that process unstructured information such as human
language, but does not provide a scale-out mechanism. UIMA-AS provides a scale-out mechanism to distribute UIMA
pipelines over a cluster of computing resources, but does not provide job or cluster management of the resources.
DUCC defines a formal job model that closely maps to a standard UIMA pipeline. Around this job model DUCC
provides cluster management services to automate the scale-out of UIMA pipelines over computing clusters.
        </p>
      <p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-ducc-2.2.2/issuesFixed/jira-report.html">here</a>.
      </p>
        <p>The major changes in this release are:</p>
        <ul>
          <li>Upgraded UIMA (2.10.2), UIMA-AS (2.10.2), ActiveMQ (5.15.2), Spring Framework (4.3.9), Camel (2.19.3), XStream (1.4.10)</li>
          <li>Requires java 8 for builds and runtime. User jobs and services must use java 8.</li>
          <li>Fixed rogue process detector to prevent truncation of user names</li>
          <li>Reduced size of publications between the PM and Agents</li>
          <li>Improved Agent's detection of defunct processes</li>
          <li>Improved logging of system events</li>
          <li>ducc_watcher improvements</li>
          <li>Job and managed reservation specs now saved in DB</li>
          <li>DUCC Web Server (WS) queries DB too often</li>
          <li>DUCC Web Server (WS) should use Resource Manager (RM) calculated value for machine's memory available</li>
    <li>Other bug fixes</li>

         </ul>
      <p>
      This version of UIMA-DUCC requires Java version 8.      
      </p>
    </subsection>

    <subsection name="05 Mar 2018" date = "05 Mar 2018" title="Apache UIMA Java SDK 3.0.0 released">
      <p>UIMA Java SDK 3.0.0 is a new version of the core Java UIMA SDK.
         This version requires a migration for pre V3 versions which use JCas classes, which will take a little 
         planning.  For those users who do not wish to migrate, please continue to use 2.10.2, which will 
         continue to be maintained.</p>
         
      <p>Version 3 re-implements Feature Structures as Java Objects; this allows them to be garbage collected.
        Many of the internal data structures have been improved and several new capabilities have been added.
       <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.0/version_3_users_guide.html#uv3.overview.new">  
       <b>Here</b></a> is a brief overview of the new features, capabilities, and migration tooling.</p>
         
       <p>Requirements: Java 8 and, for any user-defined JCas cover classes, regeneration or migration of those 
       (a migration tool is provided).</p>  
       
       <p>Except for migration of user-defined JCas classes, this new version is designed to backwards compatible with existing
          version 2 UIMA pipelines.  The    
          <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.0/version_3_users_guide.html">
          Version 3 User's Guide</a> has more details.
          The <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.0/RELEASE_NOTES.html">Release Notes</a> 
          describe what's changed since the last 3.0.0-beta release.
       </p>
       
       <p>The Eclipse update site is available, but located in a 
          <a target="_blank" rel="noopener" href="https://downloads.apache.org/uima/eclipse-update-site-v3">different spot</a>,
          in order to prevent accidentally installing v3; this version requires Java 8 and the JCasGen generates
          v3 style classes.  If you want to use this and also need to keep using v2 components, please install these
          Eclipse plugins into a separate, newly obtained eclipse download.</p>
       
    </subsection>
    
    <subsection name="07 Feb 2018" date = "07 Feb 2018" title="Apache UIMA Asynchronous Scaleout (UIMA-AS) 2.10.2 released">
      <p>UIMA AS 2.10.2 is a maintenance release that contains fixes and improvements over UIMA-AS 2.9.0.
      </p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-as-2.10.2/issuesFixed/jira-report.html">here</a>.
      </p>
        <p>The major changes in this release are:</p>
        <ul>
          <li>Updated to use ActiveMQ 5.15.2  (requires Java 1.8+)</li> 
          <li>Added dependency on UIMA SDK 2.10.2</li>
          <li>Fixed merging of type priorities</li>  
          <li>Added support for targeting specific service instance</li>
          <li>Fixed per CAS Performance Metrics breakdown</li>
          <li>Fixed eclipse examples import</li>
          <li>Fixed dd2spring issues</li> 
          <li>Fixed JMS listener recoverey after service restart</li>
          <li>Other bug fixes</li>
         </ul>
      <p>
      This version of UIMA-AS requires Java version 8 or later.
      </p>
    </subsection>



    <subsection name="14 Nov 2017" date = "14 Nov 2017" title="Apache uimaFIT 2.4.0 released">
      <p>uimaFIT 2.4.0 is a minor feature and bugfix release to uimaFIT 2.3.0. It should should 
      serve as a drop-in replacement for previous uimaFIT 2.x versions.</p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimafit-2.4.0/issuesFixed/jira-report.html">here</a>.
      </p>
      <p>The major changes in this release are:</p>
      <ul>
        <li>Fixed bug: indexCovered should not return reference annotation;</li>
        <li>Fixed bug: JCasUtil.selectAt has different meaning than expected;</li>
        <li>Upgrade to UIMA 2.10.2;</li>
        <li>Added FSUtil.isMultiValuedFeature signature that works without a feature structure;</li>
        <li>Maven plugin "generate" goal should include type system imports.</li>
       </ul>
      <p>
      This version of uimaFIT requires Java version 7 or later.      
      </p>
    </subsection>

    <!--
    <subsection name="09 Nov 2017" date = "09 Nov 2017" title="Apache UIMA Java SDK 3.0.0-beta released">
      <p>UIMA Java SDK 3.0.0-beta is a preliminary version of core UIMA 3.0.0;  it is being released as an
         <b>beta version</b> to encourage wider testing and to get early feedback.
       </p>
       <p>This version is not recommended for production.  As an beta version, the user-facing APIs should be stable
         going forward.  We especially welcome user testing of the many new capabilities, including
         contributing of new test cases.</p>
       
       <p>Requirements: Java 8 and, for any user-defined JCas cover classes, regeneration or migration of those 
       (a migration tool is provided).</p>  

       <p>
       <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.0-beta/version_3_users_guide.html#uv3.overview.new">  
       <b>Here</b></a> is a brief overview of the new features, capabilities, and migration tooling.</p>
       
       <p>Except for migration of user-defined JCas classes, it is designed to backwards compatible with existing
          version 2 UIMA pipelines.  The    
          <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.0-beta/version_3_users_guide.html">
          Version 3 User's Guide</a> has more details.
          The <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.0-beta/RELEASE_NOTES.html">Release Notes</a> 
          describe what's changed since the last alpha-02 release.
       </p>
       
       <p>The Eclipse update site is available, but located in a 
          <a target="_blank" rel="noopener" href="https://downloads.apache.org/uima/eclipse-update-site/uimaj-v3-pre-production">different spot</a>,
          in order to prevent accidentally installing the pre-production version,
          and because the v3 tooling requires Java 8 and the JCasGen generates
          v3 style classes.  If you want to use this, please install it into a 
          newly obtained eclipse download, separate from your normal work version
          of Eclipse.</p>
   </subsection>
   -->

   <subsection name="03 Nov 2017" date = "03 November 2017" title="Apache UIMA Java SDK 2.10.2 released">

      <p>This is a minor bug fix release.
      The major changes in this release include:</p>

      <ul><li>fixed a bug in xmi serialization/deserialization of 0-length string array</li>
          <li>added a filter to the Annotation Viewer utility</li>
          <li>Eclipse plugin jars are now Eclipse-signed.</li>
          <li>The Eclipse examples project fixed a typo in the javadoc attachments.</li>
          <li>The Eclipse update site was pruned of old releases; these are still available at
             <a target="_blank" rel="noopener" href="https://archive.apache.org/dist/uima/archive-eclipse-update-site/uimaj-2.3.1-2.10.1">
             https://archive.apache.org/dist/uima/archive-eclipse-update-site/uimaj-2.3.1-2.10.1</a> </li>
      </ul>                                                                                     
      
      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.10.2/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>


    <subsection name="30 Aug 2017" date = "30 Aug 2017" title="Apache UIMA DUCC 2.2.1 released">
      <p>
        DUCC stands for Distributed UIMA Cluster Computing. DUCC is a cluster management system 
        providing tooling, management, and scheduling facilities to automate the scale-out of 
        applications written to the UIMA framework. Core UIMA provides a generalized framework for
        applications that process unstructured information such as human language, but does not
        provide a scale-out mechanism. UIMA-AS provides a scale-out mechanism to distribute UIMA
        pipelines over a cluster of computing resources, but does not provide job or cluster
        management of the resources. DUCC defines a formal job model that closely maps to a standard
        UIMA pipeline. Around this job model DUCC provides cluster management services to automate
        the scale-out of UIMA pipelines over computing clusters.
      </p>

      <p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-ducc-2.2.1/issuesFixed/jira-report.html">here</a>.
      </p>
      <p>The major changes in this release are:</p>
        <ul>
          <li>The userid of a privileged DUCC installation does not have to be "ducc"</li>
          <li>ducc-mon login can be used on systems where users do not have password login</li>
          <li>The DUCC head-node daemons may be moved to another host without breaking working applications</li>
          <li>The deployment descriptor for a UIMA-AS service can be loaded from the classpath</li>
          <li>Interactive applications run correctly with viaducc (fixed lost inputs)</li>
          <li>Files created by DUCC jobs inherit the permissions of the launching shell's umask.</li>
          <li>DUCC performance breakdown for scaled synchronous pipelines is now correct</li>
          <li> Fixed javadoc method headers to enable ducc build with java 8</li>
          <li>Fixed JP communication threads wait logic when JD returns no work</li>
          <li>GC stats not available sometimes from remote JP</li>
          <li>Other bug fixes</li>
          <li>Many DUCC webpage improvements </li>
         </ul>
      <p>
        This version of UIMA-DUCC requires Java version 7 or version 8.      
      </p>
    </subsection>

    <subsection name="29 Aug 2017" date = "29 August 2017" title="Apache UIMA Java SDK 2.10.1 released">

      <p>
        This is a minor bug fix release. The major changes in this release include:
      </p>

      <ul>
        <li>https://issues.apache.org/jira/browse/UIMA-5411 - for external override values,
            make the class/data path search for external settings explicit by requiring a path: prefix.
            This is a syntax change for this feature introduced in 2.10.0.</li>
        <li>https://issues.apache.org/jira/browse/UIMA-5532 fixed some edge case issues around
          xmi and JSON serialization of Feature values marked as multiple-references-allowed.</li>
      </ul>
      
      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.10.1/issuesFixed/jira-report.html">
         the complete list of issues fixed</a> for more details of the changes.</p>
    </subsection>

    <subsection name="24 Jul 2017" date = "24 July 2017" title="Apache UIMA Ruta 2.6.1 released">
        <p>Apache UIMA Ruta is a rule-based script language supported by
          Eclipse-based tooling. The language is designed to enable rapid
          development of text processing applications within UIMA. A special
          focus lies on the intuitive and flexible domain specific language for defining
          patterns of annotations. The Eclipse-based tooling,
          called the Apache UIMA Ruta Workbench, was created to support the
          user and to facilitate every step when writing rules. Both
          the rule language and the workbench integrate
          smoothly with Apache UIMA. 
        </p>
        <p>Major Changes in this Release</p>
        <p>UIMA Ruta Language and Analysis Engine:</p>
        <ul>
          <li>Fixed problem with empty annotation list expressions</li>
          <li>Fixed stacked feature expressions</li>
          <li>Fixed false positive match in conjunct rules</li>
          <li>Fixed mixing FOREACH with BLOCK blocks</li>
          <li>Fixed min/max quantifier</li>
          <li>Fixed float variables</li>
          <li>Fixed dynamic internal reindexing</li>
          <li>Requires UIMA 2.10.0 and uimaFIT 2.3.0</li>
          <li>Other bugfixes</li>
        </ul>
        <p>UIMA Ruta Workbench:</p>
        <ul>
          <li>Fixed Query View</li>
          <li>Fixed Annotation Testing View</li>
          <li>Fixed error reporting in editor</li>
        </ul>
        
        <p>For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.6.1/issuesFixed/jira-report.html">issue report</a>.
        </p>
      </subsection>

    <subsection name="4 Apr 2017" date = "4 April 2017" title="Apache UIMA Java SDK 2.10.0 released">

      <p>The UIMA core Java SDK adds some new capabilities and fixes some bugs.
      <ul>
          <li>External Override values are supported within UIMA Descriptor import statements
          and within the fileUrl value of fileResourceSpecifiers.</li>
          <li>External Overrides: support was added for searching the classpath and UIMA Datapath to find the
              external overrides.
              If a relative file name is specified but the file is not found, 
              the classpath and datapath will be searched.  
              This approach will be changed in the next release 
              to make a clearer distinction between file and classpath resources 
              in order to avoid the ambiguity of the current design; note   
              that this change will not be backwards-compatible.</li>
          <li>to improve integration with Java, the JCas cover classes 
              for the built-in UIMA types FSArray, FSList,
              StringArray, and StringList now support the Iterable interface.</li>
          <li>a new report on API changes, <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.10.0/api-change-report.html">api-change-report.html</a>,
              is included as part of the release.</li>
          <li>several bugs were fixed; please see <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.10.0/issuesFixed/jira-report.html">
              issuesFixed</a> for a list of changes.</li>
          </ul>
          
        </p>
      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.10.0/RELEASE_NOTES.html">RELEASE_NOTES</a>
      for a summary of the changes.</p>
    </subsection>

    <subsection name="29 Mar 2017" date = "29 Mar 2017" title="Apache uimaFIT 2.3.0 released">
      <p>uimaFIT 2.3.0 is a minor feature and bugfix release to uimaFIT 2.2.0. It should should 
      serve as a drop-in replacement for previous uimaFIT 2.x versions.</p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimafit-2.3.0/issuesFixed/jira-report.html">here</a>.
      </p>
      <p>The major changes in this release are:</p>
      <ul>
        <li>Support for language and mime-type capabilities;</li>
        <li>Faster indexCovered implementation;</li>
        <li>Document auto-detection of index and type priority definitions;</li>
        <li>Fixed selectPreceding not skipping over undesired annotations;</li>
        <li>Fixed calling typeSystemInit on readers and other life-cycle methods;</li>
       </ul>
      <p>
      This version of uimaFIT requires Java version 7 or later.
      </p>
    </subsection>

    <!--
    <subsection name="19 Mar 2017" date = "19 Mar 2017" title="Apache UIMA Java SDK 3.0.0-alpha02 released">
      <p>UIMA Java SDK 3.0.0-alpha02 is a preliminary version of core UIMA 3.0.0;  it is being released as an
         <b>alpha version</b> to encourage wider testing and to get early feedback.
       </p>
       <p>This version is not recommended for production.  As an alpha version, some APIs may change 
         going forward if issues are discovered.  We especially welcome user testing of the many new capabilities, including
         contributing of new test cases.</p>
       
       <p>Requirements: Java 8 and, for any user-defined JCas cover classes, regeneration or migration of those 
       (a migration tool is provided).</p>  

       <p>
       <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.0-alpha02/version_3_users_guide.html#uv3.overview.new">  
       <b>Here</b></a> is a brief overview of the new features, capabilities, and migration tooling.</p>
       
       <p>Except for migration of user-defined JCas classes, it is designed to backwards compatible with existing
          version 2 UIMA pipelines.  The    
          <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.0-alpha02/version_3_users_guide.html">
          Version 3 User's Guide</a> has more details.
       </p>
       
       <p>The Eclipse update site is available, but located in a 
          <a target="_blank" rel="noopener" href="https://downloads.apache.org/uima/eclipse-update-site/uimaj-v3-pre-production">different spot</a>,
          in order to prevent accidentally installing the pre-production version,
          and because the v3 tooling requires Java 8 and the JCasGen generates
          v3 style classes.  If you want to use this, please install it into a 
          newly obtained eclipse download, separate from your normal work version
          of Eclipse.</p>
    </subsection>
    -->

    <subsection name="10 Mar 2017" date = "10 March 2017" title="Apache UIMA Ruta 2.6.0 released">
        <p>Apache UIMA Ruta is a rule-based script language supported by
          Eclipse-based tooling. The language is designed to enable rapid
          development of text processing applications within UIMA. A special
          focus lies on the intuitive and flexible domain specific language for defining
          patterns of annotations. The Eclipse-based tooling,
          called the Apache UIMA Ruta Workbench, was created to support the
          user and to facilitate every step when writing rules. Both
          the rule language and the workbench integrate
          smoothly with Apache UIMA. 
        </p>
        <p>Major Changes in this Release</p>
        <p>UIMA Ruta Language and Analysis Engine:</p>
        <ul>
          <li>Annotation expressions can be restricted using feature matches and conditions</li>
          <li>Several new configuration parameters for RutaEngine</li>
          <li>Experimental features to optimize internal indexing (for experienced users)</li>
          <li>Minimal support of feature structures in feature match expressions</li>
          <li>API change report for ruta-core</li>
          <li>Typesystem descriptors with JCasGen classes are located in separate artifact</li>
          <li>Implementation of RutaBasic is located in separate artifact</li>
          <li>Many bug fixes and improvements, especially for label expressions</li>
        </ul>
        <p>UIMA Ruta Workbench:</p>
        <ul>
          <li>Direct debugging of launched scripts in Java is supported</li>
          <li>Improved error messages in launcher</li>
          <li>Removed restriction of classpath size causing problems in launcher</li>
          <li>Deactivated noVM preference</li>
          <li>Changed UI to set annotation mode in views</li>
          <li>Launcher uses project encoding</li>
          <li>Bug fixes</li>
        </ul>
        <p>
          This release requires an update of script projects and its descriptors in the UIMA Ruta Workbench. 
          There are several ways to achieve this. The recommended way is to right-click on the UIMA Ruta project and select "UIMA Ruta -> Convert to UIMA Ruta project", which will update all provided descriptors.
          Then, select the project and press "Project -> Clean..." in the menu, which will regenerate all descriptors of your scripts based on the new templates.
          Projects built with the UIMA Ruta Maven Plugin require no manual effort.
        </p>
        <p>For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.6.0/issuesFixed/jira-report.html">issue report</a>.
        </p>
      </subsection>


    <subsection name="23 Feb 2017" date = "23 Feb 2017" title="Apache UIMA DUCC 2.2.0 released">
      <p>
        DUCC stands for Distributed UIMA Cluster Computing. DUCC is a cluster management system
        providing tooling, management, and scheduling facilities to automate the scale-out of
        applications written to the UIMA framework. Core UIMA provides a generalized framework for
        applications that process unstructured information such as human language, but does not
        provide a scale-out mechanism. UIMA-AS provides a scale-out mechanism to distribute UIMA
        pipelines over a cluster of computing resources, but does not provide job or cluster
        management of the resources. DUCC defines a formal job model that closely maps to a standard
        UIMA pipeline. Around this job model DUCC provides cluster management services to automate
        the scale-out of UIMA pipelines over computing clusters.
      </p>

      <p>
        The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-ducc-2.2.0/issuesFixed/jira-report.html">here</a>.
      </p>
        <p>The major changes in this release are:</p>
        <ul>
          <li>Ships with the latest UIMA-AS v2.9.0 and UIMA SDK 2.9.0</li>
          <li>Ships with ActiveMQ v5.14.0 </li>
          <li>Added support for static failover and capability to move the head node</li>
          <li>Fixed DUCC OR "warm" restart issues</li>  
          <li>Fixed DUCC startup script to fail if the DB doesn't start</li>
          <li>Fixed DUCC shutdown sequence bug which prevented agents from stopping if Broker was shutdown first</li>
          <li>Fixed Rogue process detector to detect and cleanup orphan services</li>
          <li>Deprecated ducc.agent.node.metrics.sys.gid.max and replaced with ducc.agent.rogue.process.sys.uid.max</li>
          <li>Enhanced DUCC Job Driver (JD) to provide individual work item performance breakdowns</li>
          <li>Modified DUCC to restrict broker use to ducc user only</li>
          <li>On process launch failure, agent supplies a reason for failure for display in ducc mon</li>
          <li>Added duplicate daemon detector to prevent starting duplicate DUCC daemon</li>
          <li>Many DUCC Database improvements </li>
          <li>Many DUCC webpage improvements </li>
         </ul>
      <p>
      This version of UIMA-DUCC requires Java version 7 or version 8.
      </p>
    </subsection>

    <!--
    <subsection name="30 Jan 2017" date = "30 Jan 2017" title="Apache UIMA Java SDK 3.0.0-alpha released">
      <p><b>NOTICE: The Eclipse update site for this is down temporarily, but should be restored in a few days.
         This notice will be removed when it's restored.</b></p>
      <p>UIMA Java SDK 3.0.0-alpha is a preliminary version of core UIMA 3.0.0;  it is being released as an
         <b>alpha version</b> to encourage wider testing and to get early feedback.
       </p>
       <p>This version is not recommended for production.  As an alpha version, some APIs may change 
         going forward if issues are discovered.  We especially welcome user testing of the many new capabilities, including
         contributing of new test cases.</p>
       
       <p>Requirements: Java 8 and, for any user-defined JCas cover classes, regeneration or migration of those 
       (a migration tool is provided).</p>  

       <p>
       <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.0-alpha/version_3_users_guide.html#uv3.overview.new">  
       <b>Here</b></a> is a brief overview of the new features, capabilities, and migration tooling.</p>
       
       <p>Except for migration of user-defined JCas classes, it is designed to backwards compatible with existing
          version 2 UIMA pipelines.  The    
          <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-3.0.0-alpha/version_3_users_guide.html#uv3.overview.new">
          Version 3 User's Guide</a> has more details.
       </p>
    </subsection>
    -->
         
    <subsection name="15 Dec 2016" date = "15 Dec 2016" title="Apache UIMA Asynchronous Scaleout (UIMA-AS) 2.9.0 released">
      <p>UIMA AS 2.9.0 is a maintenance release that contains fixes and improvements over UIMA-AS 2.8.1.
      </p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-as-2.9.0/issuesFixed/jira-report.html">here</a>.
      </p>
        <p>The major changes in this release are:</p>
        <ul>
          <li>Updated to use Activemq 5.14.0</li> 
          <li>Added dependency on UIMA SDK 2.9.0</li>
          <li>Fixed http based service connectivity</li>  
          <li>Added support for automatic recovery of temp queues after broker restart.</li>
          <li>Fixed per CAS Performance Metrics breakdown </li>
          <li>Fixed per process CPU and RSS reporting</li> 
          <li>Fixed example runtime configurations</li>
          <li>Fixed error recovery on exception while deserializing a CAS</li>
          <li>"Pinned" JMX MBeans to a specific deployment to enable orderly cleanup</li>
          <li>Fixed support of AMQ white listing of packages</li>
          <li>Added support to disable JMX via a new argument -Duima.as.enable.jmx=false</li>
          <li>Fixed dd2spring issues</li>
          <li>Updated version checker to test compatibility with UIMA SDK.</li> 
         </ul>
      <p>
      This version of UIMA-AS requires Java version 7 or later.      
      </p>

    </subsection>


    <subsection name="28 Sep 2016" date = "28 September 2016" title="Apache UIMA Ruta 2.5.0 released">
        <p>Apache UIMA Ruta is a rule-based script language supported by
          Eclipse-based tooling. The language is designed to enable rapid
          development of text processing applications within UIMA. A special
          focus lies on the intuitive and flexible domain specific language for defining
          patterns of annotations. The Eclipse-based tooling,
          called the Apache UIMA Ruta Workbench, was created to support the
          user and to facilitate every step when writing rules. Both
          the rule language and the workbench integrate
          smoothly with Apache UIMA. 
        </p>
        <p>Major Changes in this Release</p>
        <p>
        <p>UIMA Ruta Language and Analysis Engine:</p>
        <ul>
          <li>Depends on UIMA 2.9.0 and uimaFIT 2.2.0</li>
          <li>New block FOREACH: iterate over pattern and reuse the matched annotation in contained rules</li>
          <li>Label expressions across inlined rules are supported, behave like local variables now</li>
          <li>Feature expressions on label expressions are supported</li>
          <li>Setting values of variables by configuration parameter</li>
          <li>Macros support variables</li>
          <li>New type function: typeFromString</li>
          <li>Wordlist initialization with string expressions: simplified specification of language-dependent dictionary usage</li>
          <li>New maven archetype for typical UIMA Ruta projects</li>
          <li>Improved and faster maven plugins</li>
          <li>Parameters additionalScripts and additionalEngines are now optional</li>
          <li>Removed engine loader concept and parameter completely</li>
          <li>Removed redundant Document type</li>
          <li>Improved datapath support</li>
          <li>Improved resource manager support</li>
          <li>Many bug fixes and improvements</li>
         </ul>
        <p>UIMA Ruta Workbench:</p>
         <ul>
          <li>Improved support of classpath-lookup in maven-based projects</li>
          <li>Launch configuration supports various serialization formats (with preference)</li>
          <li>Bug fixes</li>
         </ul>
        </p>
        <p>
          This release requires an update of script projects and its descriptors in the UIMA Ruta Workbench. 
          There are several ways to achieve this. The recommended way is to right-click on the UIMA Ruta project and select "UIMA Ruta -> Convert to UIMA Ruta project", which will update all provided descriptors.
          Then, select the project and press "Project -> Clean..." in the menu, which will regenerate all descriptors of your scripts based on the new templates.
          Projects built with the UIMA Ruta Maven Plugin require no manual effort.
        </p>
        <p>For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.5.0/issuesFixed/jira-report.html">issue report</a>.
        </p>
      </subsection>
      
    <subsection name="30 Aug 2016" date = "30 August 2016" title="Apache UIMA Java SDK 2.9.0 released">

      <p>The UIMA core Java SDK adds some new capabilities and fixes some bugs.
      <ul>
          <li>Two new features were added.
          <ul><li>CasIOUtls - a collection of general-purpose CAS load/save utilities, with support for
          including the type system and index definition information along with the Feature Structures.</li>
          <li>A new set of APIs allowing use of the external shared settings files to be used directly, rather than only by 
          overriding UIMA configuration parameters. These APIs give direct access by the external settings file's key names to the 
          key values.</li>
          </ul>
          </li>
          <li>Many bugs were fixed, including:
          <ul>
          <li>A regression (since version 2.8.0) which broke the unambiguous AnnotationIndex iterator in some cases.</li>
          <li>fixes for the Eclipse tooling plugins to work with the latest Eclipse (4.6, Neon) version.</li>
          <li>Sofa mapping support for flow controllers.</li>
          <li>Fixing a stack overflow error in AnnotationViewer when switching Sofas.</li>
          <li>Fixing 2 JSON serialization issues: mishandling of arrays of FeatureStructures having null entries,
          and mishandling of namespaces for uninstantiated types found as supertypes.</li>
          </ul>
          </li>
          </ul></p>
      <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.9.0/RELEASE_NOTES.html">RELEASE_NOTES</a>
      for a summary of the changes.</p>
    </subsection>

    <subsection name="08 Aug 2016" date = "08 Aug 2016" title="Apache UIMA DUCC 2.1.0 released">
 <p>DUCC stands for Distributed UIMA Cluster Computing. DUCC is a cluster management system providing tooling,
management, and scheduling facilities to automate the scale-out of applications written to the UIMA framework.
Core UIMA provides a generalized framework for applications that process unstructured information such as human
language, but does not provide a scale-out mechanism. UIMA-AS provides a scale-out mechanism to distribute UIMA
pipelines over a cluster of computing resources, but does not provide job or cluster management of the resources.
DUCC defines a formal job model that closely maps to a standard UIMA pipeline. Around this job model DUCC
provides cluster management services to automate the scale-out of UIMA pipelines over computing clusters.

        </p>

      <p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-ducc-2.1.0/issuesFixed/jira-report.html">here</a>.
      </p>
        <p>The major changes in this release are:</p>
        <ul>

          <li>Ubuntu and RHEL 7 support </li>
          <li>cgroup enhancements </li>
             <ul>
                <li>uses standard cgroups organization</li>
                <li>supports cgroup swappiness setting, restricting any swapping if desired</li>   
             </ul>
          <li>DUCC state and history storage moved from flat files to Cassandra DB, reducing storage size 5x </li>
          <li>Ships with the latest UIMA-AS v2.8.1 </li>
          <li>Ships with recent ActiveMQ v5.13.2 </li>
          <li>DUCC's UIMA-AS services support failover and ssl connectors </li>
          <li>Many DUCC webpage improvements </li>
          <li>Clear user display of DUCC classes and relation to machines </li>
          <li>Robust handling of dynamic changes to DUCC class and nodepool definitions </li>
          <li>Full support of nodepools with different quantum </li>
          <li>DUCC broker access restricted to user ducc </li>
          <li>Eliminate need for user home directories located on a shared filesystem </li>
          <li>Built-in Job error handler programmable per job </li>
          <li>Migration utility for DUCC updates </li>
          <li>Change to vary-off behavior to facilitate cluster management </li>
          <li>Horizontal stacking of services instance allocations </li>
          <li>java-viaducc improvements including separation of stdout from stderr respoonses </li>
          <li>An alert banner is displayed on ducc-mon pages if daemons are down </li>
          <li>Promoted DUCC from sandbox to the regular Apache project in the SVN </li>
         </ul>
      <p>
      This version of UIMA-DUCC requires Java version 7 or version 8.      
      </p>
    </subsection>


    <subsection name="20 May 2016" date = "20 May 2016" title="Apache UIMA Asynchronous Scaleout (UIMA-AS) 2.8.1 released">
      <p>UIMA AS 2.8.1 is a maintenance release that contains fixes and improvements over UIMA-AS 2.6.0.
      </p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-as-2.8.1/issuesFixed/jira-report.html">here</a>.
      </p>
        <p>The major changes in this release are:</p>
        <ul>
          <li>Upgraded ActiveMQ, Spring Framework and Jetty</li>
          <li>Upgraded dependency on UIMA-SDK to v.2.8.1</li>
          <li>Fixed per CAS Performance Metrics breakdown for async deployments</li>
          <li>Added new feature to allow warm up of a JVM service instance before real processing begins,
    by feeding it a specified set of CASes before the instance connects to the service input queue.</li>
         </ul>

      <p>
      This version of UIMA-AS requires Java version 7 or later.      
      </p>
    </subsection>


      <subsection name="06 Apr 2016" date = "06 Apr 2016" title="Apache uimaFIT 2.2.0 released">
        <p>uimaFIT 2.2.0 is a minor feature and bugfix release to uimaFIT 2.1.0. It should should 
        serve as a drop-in replacement for previous uimaFIT 2.x versions.</p><p>
        The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimafit-2.2.0/issuesFixed/jira-report.html">here</a>.
        </p>
        <p>The major changes in this release are:</p>
        <ul>
          <li>New FSUtil class with methods to get/set feature values</li>
          <li>New selectAt method</li>
          <li>Improved compatibility with thread context classloaders</li>
          <li>Upgrades to dependencies including UIMA SDK and Spring Framework</li>
          <li>Use of iteratorWithSnapshot in select methods</li>
          <li>Limited support of UIMA arrays (prototypical)</li>
          <li>Many, many bug fixes and improvements</li>
         </ul>
        <p>
        This version of uimaFIT requires Java version 7 or later.      
        </p>
      </subsection>
 
      <subsection name="15 Feb 2016" date = "15 February 2016" title="Apache UIMA Ruta 2.4.0 released">
        <p>Apache UIMA Ruta is a rule-based script language supported by
          Eclipse-based tooling. The language is designed to enable rapid
          development of text processing applications within UIMA. A special
          focus lies on the intuitive and flexible domain specific language for defining
          patterns of annotations. The Eclipse-based tooling,
          called the Apache UIMA Ruta Workbench, was created to support the
          user and to facilitate every step when writing rules. Both
          the rule language and the workbench integrate
          smoothly with Apache UIMA. 
        </p>
        <p>Major Changes in this Release</p>
        <p>
        <p>UIMA Ruta Language and Analysis Engine:</p>
        <ul>
          <li>Explicit referencing of annotations with variables, labels and addresses</li>
          <li>Helper methods for applying rules directly in Java code</li>
          <li>New action for splitting annotations</li>
          <li>New block for resetting match context</li>
          <li>Import of uimaFIT analysis engines with mandatory parameters</li>
          <li>Macros for conditions and actions (prototypical)</li>
          <li>Limited support of UIMA arrays (prototypical)</li>
          <li>Many, many bug fixes and improvements</li>
         </ul>
        <p>UIMA Ruta Workbench:</p>
         <ul>
          <li>More support of external files</li>
          <li>Bug fixes</li>
         </ul>
        </p>
        <p>
          This release requires an update of script projects and its descriptors in the UIMA Ruta Workbench, 
          e.g, by deleting all descriptors and updating the script project.
          Right-click on a project and select "UIMA Ruta -> Convert to UIMA Ruta project.
          Projects built with the UIMA Ruta Maven Plugin require no manual effort.
        </p>
        <p>For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.4.0/issuesFixed/jira-report.html">issue report</a>.
        </p>
      </subsection>
 
     <subsection name="26 Oct 2015" date = "26 October 2015" title="Apache UIMA Ducc 2.0.1 released">
  
          <p>This is a bug fix release addressing bugs found since ducc 2.0.0 release.</p>
        <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-ducc-2.0.1/RELEASE_NOTES.html">RELEASE_NOTES</a>
        for a summary of the changes.</p>
      </subsection>

     <subsection name="25 Aug 2015" date = "25 August 2015" title="Apache UIMA Ruta 2.3.1 released">
  
          <p>This is a bugfix release. It fixes diverse problems of the rule inference, 
            the ruta-maven-plugin and the UIMA Ruta Workbench.</p>
          <p>For a complete list of bugs and improvements included in this release please see
          <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.3.1/issuesFixed/jira-report.html">issue report</a>.
          </p>
      </subsection>

     <subsection name="11 Aug 2015" date = "11 August 2015" title="Apache UIMA DUCC 2.0.0 released">
        <p>DUCC stands for Distributed UIMA Cluster Computing. DUCC is a cluster management system providing tooling,
management, and scheduling facilities to automate the scale-out of applications written to the UIMA framework.
Core UIMA provides a generalized framework for applications that process unstructured information such as human
language, but does not provide a scale-out mechanism. UIMA-AS provides a scale-out mechanism to distribute UIMA
pipelines over a cluster of computing resources, but does not provide job or cluster management of the resources.
DUCC defines a formal job model that closely maps to a standard UIMA pipeline. Around this job model DUCC
provides cluster management services to automate the scale-out of UIMA pipelines over computing clusters.

        </p>

        <p>This is a major release containing new features and numerous bug fixes. What's new:</p>

        <p>Added support for classpath isolation - User's code runs with the classpath it supplies</p>

        <p>Added support for non-preemptive (NP) workloads</p>

        <p>Modified DUCC error handler interface API</p>

        <p>Extended CGROUPS support by adding CPU control</p>

        <p>Changed DUCC flow controller typesystem location</p>

        <p>Added support for queueing resource requests that were previously unfulfillable</p>


        <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-ducc-2.0.0/RELEASE_NOTES.html">RELEASE_NOTES</a>
        for a summary of the changes.</p>
      </subsection>

      <subsection name="11 Aug 2015" date = "11 August 2015" title="Apache UIMA Java SDK 2.8.1 released">

        <p>This release is a bug fix release; replacing 2.8.0, and addressing a few issues reported
        after the 2.8.0 release.</p>
        <p>Please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.8.1/RELEASE_NOTES.html">RELEASE_NOTES</a>
        for a summary of the changes.</p>
      </subsection>
      
      <subsection name="22 July 2015" date = "22 July 2015" title="Apache UIMA Java SDK 2.8.0 released">
        <p>Note: this version has been replaced by 2.8.1 (above), and has been removed
        from the download page (but is available on the archives, if needed).</p>
        <p>This release is a bug fix release, plus one enhancement.  The version number incremented because
        we restored some APIs that were accidentally dropped in 2.7.0.  
        </p>
        <p>An improvement was made to the performance of iterators over sorted indexes, such as the 
        built-in Annotation index.  This improvement may be significant when iterating over types where the type has
        many subtypes.</p>
        
        <p>Index usage by iterators in this situation is now monitored, and when it is determined 
        that a particular index is no longer being updated and is experiencing poor performance due to merging of 
        subindexes for the subtypes being iterated over, a one-time conversion of this index to a "flattened" version is done; 
        the flattened form incurs the cost of merging subindexes once, and for subsequent uses, 
        iteration overhead is reduced. Any update that affects this flattened index will cause it to be discarded 
        and not used for subsequent iterations.</p>
        
        <p>Performance improvement may be seen for use cases 
        where one annotator creates and indexes instances of a type and its subtypes, and subsequent annotators 
        read and perhaps update these, but don't add or remove entries of this type/subtypes from the index. 
        For more details, see Jira issue 
        <a target="_blank" rel="noopener" href="https://issues.apache.org/jira/browse/UIMA-4357">UIMA-4357</a>. 
        </p>
        <p>For more details, please see the <a target="_blank" rel="noopener" href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.8.0/RELEASE_NOTES.html">RELEASE_NOTES</a>.</p>
      </subsection>
      
      <subsection name="08 June 2015" date = "08 June 2015" title="Apache UIMA Ruta 2.3.0 released">
        <p>Apache UIMA Ruta is a rule-based script language supported by
          Eclipse-based tooling. The language is designed to enable rapid
          development of text processing applications within UIMA. A special
          focus lies on the intuitive and flexible domain specific language for defining
          patterns of annotations. The Eclipse-based tooling,
          called the Apache UIMA Ruta Workbench, was created to support the
          user and to facilitate every step when writing rules. Both
          the rule language and the workbench integrate
          smoothly with Apache UIMA. 
        </p>
        <p>Major Changes in this Release</p>
        <p>
          This release requires an update of script projects and its descriptors in the UIMA Ruta Workbench, 
          e.g, by deleting all descriptors and updating the script project.
          Right-click on a project and select "UIMA Ruta -> Convert to UIMA Ruta project
        </p>
        <p>
        <p>UIMA Ruta Language and Analysis Engine:</p>
        <ul>
          <li>Requires Java 7</li>
          <li>Maven Plugin for UIMA Ruta</li>
          <li>Extensions and simplifications of the language (external resources, null values, more syntactic sugar)</li>
          <li>Improvements to Analysis Engines (RutaEngine, HtmlConverter)</li>
          <li>More exemplary script projects</li>
          <li>Many, many bug fixes</li>
         </ul>
        <p>UIMA Ruta Workbench:</p>
         <ul>
          <li>Requires Java 7</li>
          <li>Works now also in other project structures (Maven projects)</li>
          <li>Bug fixes</li>
         </ul>
        </p>
        
        <p>For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.3.0/issuesFixed/jira-report.html">issue report</a>.
        </p>
      </subsection>
      
      
      <subsection name="06 March 2015" date = "06 March 2015" title="Apache UIMA Java SDK 2.7.0 released">
      <p>The UIMA Java SDK now requires Java 7.  There are significant changes in this release.  
      Some of these may break backwards compatibility; we have included some new JVM properties
      to aid in gradually adapting to these changes.  See the 
      <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.7.0/README">README</a> file for a description of these properties.
      </p>
      
      <p>There is a new capability that detects operations which change feature values used as keys
      in sorted and set indexes; by default, the Framework now insures that the indexes
      are properly updated when this happens.  A new report can be generated to show the user when this is happening,
      so they may improve their code.</p>
      
      <p>This release supports a new JSON serialization of the CAS and of UIMA descriptors.  This is
      described in the <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.7.0/references.html#ugr.ref.json">reference manual</a>.</p>
      
      <p>Many performance improvements have been made.</p>
      
      <p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.7.0/issuesFixed/jira-report.html">here</a>.
      </p>
    </subsection>
   
   <subsection name="23 October 2014" date = "23 October 2014" title="Apache UIMA DUCC 1.1.0 released">
          <p>UIMA DUCC 1.1.0 is a maintenance release that contains fixes and improvements over UIMA-DUCC 1.0.0.</p>
                                    
        <p>DUCC stands for Distributed UIMA Cluster Computing. DUCC is a cluster management system providing tooling,
management, and scheduling facilities to automate the scale-out of applications written to the UIMA framework.
Core UIMA provides a generalized framework for applications that process unstructured information such as human
language, but does not provide a scale-out mechanism. UIMA-AS provides a scale-out mechanism to distribute UIMA
pipelines over a cluster of computing resources, but does not provide job or cluster management of the resources.
DUCC defines a formal job model that closely maps to a standard UIMA pipeline. Around this job model DUCC
provides cluster management services to automate the scale-out of UIMA pipelines over computing clusters.

        </p>
      <p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-ducc-1.1.0/issuesFixed/jira-report.html">here</a>.
      </p>
              
    </subsection> 
    
     <subsection name="23 September 2014" date = "23 September 2014" title="Apache UIMA Ruta 2.2.1 released">
        <p>Apache UIMA Ruta is a rule-based script language supported by
          Eclipse-based tooling. The language is designed to enable rapid
          development of text processing applications within UIMA. A special
          focus lies on the intuitive and flexible domain specific language for defining
          patterns of annotations. The Eclipse-based tooling,
          called the Apache UIMA Ruta Workbench, was created to support the
          user and to facilitate every step when writing rules. Both
          the rule language and the workbench integrate
          smoothly with Apache UIMA. 
        </p>
        <p>For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.2.1/issuesFixed/jira-report.html">issue report</a>.
        </p>
        <p> The UIMA Ruta Workbench 2.2.1 requires a newer version of Eclipse (>4.0) due to the CAS Editor. It has been tested with Eclipse 4.3.2.
        </p>
        
      </subsection>

    <subsection name="16 July 2014" date = "16 July 2014" title="Apache UIMA Asynchronous Scaleout (UIMA-AS) 2.6.0 released">
      <p>UIMA AS 2.6.0 is a maintenance release that contains fixes and improvements over UIMA-AS 2.4.2.
      </p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-as-2.6.0/issuesFixed/jira-report.html">here</a>.
      </p><p>
      This version of UIMA-AS requires Java version 6 or later.      
      </p>
    </subsection>


    <subsection name="12 June 2014" date = "12 June 2014" title="Apache uimaFIT 2.1.0 released">
      <p>uimaFIT 2.1.0 is a bugfix release to uimaFIT 2.0.0. The reason that the minor version was
      increased instead of the bugfix version is, that uima 2.1.0 requires Java 6 and uses the UIMA
      Java SDK 2.6.0. Otherwise, this version should serve as a drop-in replacement for uimaFIT 
      2.0.0.</p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimafit-2.1.0/issuesFixed/jira-report.html">here</a>.
      </p><p>
      This version of uimaFIT requires Java version 6 or later.      
      </p>
    </subsection>
      
    <subsection name="12 May 2014" date = "12 May 2014" title="Apache UIMA Java SDK 2.6.0 released">
      <p>The UIMA framework has been enhanced to support large memory/ large multi-core machines,
      with various improvements to synchronization, lock contention, and locality of reference to optimize
      memory bandwidth in the presence of non-uniform memory access speeds.  In addition, embedders of the framework
      can now choose to run initialization of UIMA components that share a common Resource Manager 
      and/or common UIMA Context, on multiple threads, concurrently.  CASes which are not being modified can
      be accessed (read-only) by multiple threads, simultaneously.  Along the way, many subtle bugs were fixed.
      </p><p>
      The complete list of fixes is <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.6.0/issuesFixed/jira-report.html">here</a>.
      </p><p>
      This version of UIMA requires Java version 6 or later.      
      </p>
    </subsection>
      

      <subsection name="15 April 2014" date = "15 April 2014" title="Apache UIMA Ruta 2.2.0 released">
        <p>Apache UIMA Ruta is a rule-based script language supported by
          Eclipse-based tooling. The language is designed to enable rapid
          development of text processing applications within UIMA. A special
          focus lies on the intuitive and flexible domain specific language for defining
          patterns of annotations. The Eclipse-based tooling,
          called the Apache UIMA Ruta Workbench, was created to support the
          user and to facilitate every step when writing rules. Both
          the rule language and the workbench integrate
          smoothly with Apache UIMA. 
        </p>
        <p>The major changes in this release are:</p>
        <p>UIMA Ruta Language and Analysis Engine:</p>
          <ul>
            <li>Major performance improvements (3-17 times faster in test use cases)</li>
            <li>Improved import type functionality and handling of ambiguous short names</li>
            <li>Support of block extensions for rule inference adaptions</li>
            <li>Options to determine where the next match should start</li>
            <li>Requires at least Java 6</li>
            <li>Many bug fixes</li>
          </ul>
          <p>UIMA Ruta Workbench:</p>
          <ul>
            <li>Smaller improvements in many views</li>
            <li>Support of mixin Java/Ruta projects</li>
            <li>Many bug fixes</li>
          </ul>
        <p>For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.2.0/issuesFixed/jira-report.html">issue report</a>.
        </p>
        
      </subsection>


  <subsection name="10 April 2014" date = "10 April 2014" title="Upcoming UIMA Workshop at COLING 2014">
         <p>There will be a workshop with a strong focus on UIMA, as part of the 
  <a href="https://glicom.upf.edu/OIAF4HLT/">Workshop on Open Infrastructures and Analysis Frameworks for HLT</a> 
  at <a href="https://www.coling-2014.org/">COLING 2014</a>, the 25th International Conference on Computational Linguistics.  
  Please find the CFP <a href="./coling14.html">here</a>.
        </p>
              
  </subsection>
  <subsection name="30 January 2014" date = "30 January 2014" title="Apache UIMA DUCC 1.0.0 released">
         <p>This is the first release of the sandbox project UIMA DUCC.</p>
                                    
        <p>DUCC stands for Distributed UIMA Cluster Computing. DUCC is a cluster management system providing tooling,
management, and scheduling facilities to automate the scale-out of applications written to the UIMA framework.
Core UIMA provides a generalized framework for applications that process unstructured information such as human
language, but does not provide a scale-out mechanism. UIMA-AS provides a scale-out mechanism to distribute UIMA
pipelines over a cluster of computing resources, but does not provide job or cluster management of the resources.
DUCC defines a formal job model that closely maps to a standard UIMA pipeline. Around this job model DUCC
provides cluster management services to automate the scale-out of UIMA pipelines over computing clusters.

        </p>
              
    </subsection>

    <subsection name="14 January 2014" date = "14 January 2014" title="Apache UIMA Java SDK 2.5.0 released">
      <p>This is a bug-fix only release.
      The fixes are listed <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.5.0/issuesFixed/jira-report.html">here</a>.</p>
    </subsection>

    <subsection name="14 November 2013" date = "14 November 2013" title="Apache UIMA Asynchronous Scaleout (UIMA-AS) 2.4.2 released">
          <p>UIMA AS 2.4.2 is a maintenance release that contains fixes and improvements over UIMA-AS 2.4.0.
          </p>
          
          <p>Besides bug fixes, this release includes:</p>
          <ul>
            <li>Replaced ActiveMQ version 5.4.1 with version 5.6.0</li>
            <li>Implemented PEAR support</li>  
            <li>Added client-side callbacks to notify an application where a CAS is being processed</li>  
            <li>Refactored JMS Session expiration management to prevent broker OOMs</li>  
            <li>Refactored UIMA-AS Async Aggregate to support processing multiple input CASes in parallel</li>  
            <li>Refactored CAS Accounting code to prevent loosing CASes in complex/nested deployments</li>  
            <li>Improved error handling and recovery</li>  
            <li>Performance improvements</li>  
          </ul>
          
        <p>
           
          Please see the release notes on the <a href="downloads.cgi">downloads</a> page, for a more complete summary
          and a complete list of changes.
        </p>       
    </subsection>
   

    <subsection name="20 September 2013" date = "20 September 2013" title="Apache UIMA Ruta 2.1.0 released">

        <p>Apache UIMA Ruta is a rule-based script language supported by
          Eclipse-based tooling. The language is designed to enable rapid
          development of text processing applications within UIMA. A special
          focus lies on the intuitive and flexible domain specific language for defining
          patterns of annotations. The Eclipse-based tooling,
          called the Apache UIMA Ruta Workbench, was created to support the
          user and to facilitate every step when writing rules. Both
          the rule language and the workbench integrate
          smoothly with Apache UIMA.
        </p>
        <p>The major changes in this release are:</p>
        <p>UIMA Ruta Language and Analysis Engine:</p>
          <ul>
            <li>Combinations of rule elements that specify no sequential constraint</li>
            <li>Rule elements with inlined rules, which are interpreted as "actions"
            or "conditions"</li>
            <li>Dot notation for accessing features, also available as matching conditions</li>
            <li>Implicit actions and conditions</li>
            <li>New analysis engines for CAS manipulation</li>
            <li>Direct import of uimaFIT analysis engines without descriptor</li>
            <li>RutaEngine is now a uimaFIT component</li>
            <li>Manual specification of the start anchor for a rule match</li>
            <li>Many bug fixes</li>
            </ul>
            <p>UIMA Ruta Workbench:</p>
            <ul>
            <li>Compatible with uimaj 2.4.2 and Eclipse Kepler</li>
            <li>New framework for constraint-driven evaluation</li>
            <li>Two new rule learning algorithms for the TextRuler framework</li>
            <li>New views, e.g., Annotation Check and Html viewer</li>
            <li>Combinations with java projects</li>
            <li>Open CAS Editor at Eclipse startup causes less problems</li>
            <li>Many bug fixes</li>
          </ul>
        <p>For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.1.0/issuesFixed/jira-report.html">issue report</a>.
        </p>
        
      </subsection>


      <subsection name="31 August 2013" date = "31 August 2013" title="Apache uimaFIT 2.0.0 released">
        <p>Apache uimaFIT&#0153; is a library that 
          facilitates the building of Apache UIMA components, the programmatic use of Apache UIMA
          analysis pipelines, and their testing.

          uimaFIT employs Java annotations to integrate UIMA meta data directly into the source 
          code, allowing for less lines of code and better refactorability then traditional, XML 
          descriptor-based UIMA projects. It is capable of automatically detecting meta data,
          e.g. type system information, from the classpath. Convenience methods are provided for 
          constructing components, pipelines, and for accessing annotations.
          </p>
          
          <p>This is the first Apache release of the project previously known simply as "uimaFIT".</p>
          
          <p>The major changes in this release are:</p>
          <ul>
            <li>Migration to Apache Foundation as part of the Apache UIMA project.</li>
            <li>New Maven coordinates (groupId: org.apache.uima; artifactId: uimafit-core)</li>
            <li>New uimaFIT Maven plugin for automatically generating uimaFIT meta data in component
              classes and UIMA descriptors from uimaFIT-annotated component classes</li>
            <li>New module for backwards compatibility with uimaFIT 1.4.x-based components</li>
            <li>Consolidated documentation in HTML and PDF format</li>
            <li>Moved CPE support to separate dependency 
              (groupId: org.apache.uima; artifactId: uimafit-cpe)</li>
            <li>Improved component life-cycle handling</li>
            <li>New support for setting multi-valued parameters with simple single 
              values (no need to wrap them in a collection or array anymore)</li>
            <li>Improved support for external resources, including support for
              multi-valued external resources</li>  
          </ul>

    <p>Note on compatibility and migration: Apache uimaFIT 2.0.0 is not a drop-in replacement 
      for uimaFIT 1.4.x, although, it was tried to keep the migration effort minimal. Please 
          refer to the <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimafit-2.0.0/tools.uimafit.book.html#d5e617">
          migration guide</a> for all the details on incompatible changes between uimaFIT 1.4.0 and
          Apache uimaFIT 2.0.0.
    </p>
          
        <p>
          Additionally, there have been more bug fixes and minor improvements. For a full list of 
          the changes, please refer to the <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimafit-2.0.0/issuesFixed/jira-report.html">
          issue report</a>.
        </p>         
      </subsection>

      <subsection name="09 August 2013" date = "09 August 2013" title="Apache UIMA Java SDK 2.4.2 released">
        <p>This is a bug-fix only release, and effectively replaces the 2.4.1 release.
        The fixes are listed <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.4.2/issuesFixed/jira-report.html">here</a>.</p>
      </subsection>

      <subsection name="26 July 2013" date = "26 July 2013" title="Apache UIMA Java SDK 2.4.1 released">
          <p>This release only has the Apache UIMA&#0153; Java SDK, and does not yet have the other
          components.  It is backwards compatible with previous releases, except some classes and interfaces
          which have additional methods supporting new capabilities and features.
          </p>
          
          <p>Besides some bug fixes, this release includes:</p>
          <ul>
            <li>Documentation of binary serialization.</li>
            <li>New kinds of compressed binary serialization that compress the data significantly
      and one form that supports unequal source/target type systems</li>  
            <li>A new facility called External Parameter Overrides for specifying parameter settings for annotators 
      that uses properties files and is independent of the annotator hierarchy</li>  
            <li>CasCopier enhancements to allow copying one view to a different view.</li>  
            <li>Additional options to restrict JCasGen operation to generating just those types that are defined in a project,
      excluding other types that are imported from other projects</li>  
            <li>A new Maven plugin that runs JCasGen (see tools documentation for how to configure and use this)</li>  
            <li>a new ability to preserve white space (indentation) when parsing XML descriptors; this is now used in the
      Component Descriptor Editor (CDE), to preserve indentation when editing an existing descriptor.</li>  
            <li>Performance and space improvements, including some bulk methods for efficiently removing Feature Structures from Indexes</li>  
            <li>The CDE supports 3 new things: the preserving of existing white-space in XML descriptors, 
      External Parameter Overrides, and a configuration option to restrict JCasGen to just those
      types defined in the project.</li>  
            <li>Enhancements to the DocumentAnalyzer utility to support reading CASes in various formats</li>  
          </ul>
          
        <p>
           
          Please see the release notes on the <a href="downloads.cgi">downloads</a> page, for a more complete summary
          and a complete list of changes.
        </p>       
      </subsection>

      <subsection name="29 May 2013" date = "29 May 2013" title="Apache UIMA Ruta 2.0.1 released">
                                    
        <p>Apache UIMA Ruta is a rule-based script language supported by Eclipse-based tooling. 
          The language is designed to enable rapid development of text processing applications within UIMA.
        </p>
        
        <p>For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/ruta-2.0.1/RELEASE_NOTES.html">release-notes</a>.
        </p>
        
      </subsection>


      <subsection name="05 March 2013" date = "05 March 2013" title="Apache UIMA Ruta (was formerly named TextMarker) 2.0.0 released">
          <p>This is the first release of the sandbox project UIMA Ruta (was initially
            released with the name TextMarker).</p>
                                    
        <p>Apache UIMA Ruta is a rule-based script language supported by Eclipse-based tooling. 
          The language is designed to enable rapid development of text processing applications within UIMA.
        </p>
              
      </subsection>

       <subsection name="20 November 2012" date = "20 November 2012" title="Apache UIMA C++ SDK 2.4.0 released">
          <p>This is the first release of UIMA C++ as a top level project.</p>
                                    
        <p>Notable updates included in this release: standardization of Linux build process and packaging, updates to ActiveMQ service wrapper to support failover,
          many bug fixes.</p>
        
        <p>For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimacpp-2.4.0/RELEASE_NOTES.html">release-notes</a>.
        </p>
        
      </subsection>
      <subsection name="15 November 2012" date = "15 November 2012" title="Apache UIMA Asynchronous Scaleout (UIMA-AS) 2.4.0 released">
          <p>UIMA AS 2.4.0 is a maintenance release that contains fixes and 
                                    improvements over UIMA AS 2.3.1.</p>
                                    
        <p>Notable updates included in this release: added support for programmatic generation of deployment descriptors, 
        user supplied CR can now be used by UIMA-AS client, per AE performance breakdown is collected and returned to
        a client to expose bottlenecks, extended callback API to include info where a CAS is being processed (ip,pid,thread id),  
        improved stability and error handling, many bug fixes.</p>
        
        <p>For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-as-2.4.0/issuesFixed/jira-report.html">jira-report</a>.
        </p>
        
      </subsection>


      <subsection name="07 December 2011" date = "07 December 2011" title="Apache UIMA Java SDK 2.4.0 released">
          <p>This release only has the Apache UIMA&#0153; Java SDK, and does not yet have the other
          components.  It is backwards compatible with previous releases, except for an API change in the 
          JMX tooling, and a redesign of the Eclipse plugin for editing CASes.
          </p>
          
          <p>Besides some bug fixes, there is some tooling enhancement.  A new Eclipse plugin hooks into Eclipse's "launching" capability to support launching
          annotators more easily from Eclipse; see the <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.4.0/tools.html">Tools</a> manual for information.
          
          The Cas Editor Eclipse plugin has been substantially enhanced; please see the <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uimaj-2.4.0/tools.html">Tools</a> manual
          for more information.</p>
          
        <p>
           
          Please see the release notes on the <a href="downloads.cgi">downloads</a> page, for a more complete summary
          and a complete list of changes.
        </p>       
      </subsection>

      <subsection name='29 August 2011' date="29 August 2011" title="UIMA Addons 2.3.1 Released">
        <p>
          This release includes most of the projects in the Sandbox.  Those projects there
          that were ready to be released were moved to a new SVN top node in the 
          UIMA project, called "addons".  
        </p>
          
          <p>
          The addons package contains 2 new annotators: Solrcas (for storing CAS objects into an 
          Apache Solr instance), and AlchemyAPIAnnotator (wraps alchemyapi.com services).  
          </p>
          
          <p>Several fixes and improvements were made to other annotators.
          Please see the release notes on the <a href="downloads.cgi">downloads</a> page, for a more complete summary
          and a complete list of changes.
        </p>       
      </subsection>
           
      <subsection name="22 March 2011" date = "22 March 2011" title="Apache UIMA AS 2.3.1 released">
        <p>UIMA AS 2.3.1 is a maintenance release that contains fixes and improvements over UIMA AS 2.3.0.
        Notable updates included in this release: upgrade to ActiveMQ 5.4.1, inclusion of base UIMA 
        2.3.1 jars, improved stability and error handling, many bug fixes.
        For a complete list of bugs and improvements included in this release please see
        <a href="https://svn.apache.org/repos/asf/uima/site/archive/docs/d/uima-as-2.3.1/issuesFixed/jira-report.html">jira-report</a>.
        </p>
      </subsection>
 
      <subsection name="14 February 2011" date = "14 February 2011" title="Apache UIMA underlies Watson Jeopardy! challenger">
        <a target="_blank" rel="noopener" href="https://s.apache.org/WJ3">
          ASF news item about UIMA underlying Watson</a>
      </subsection>
      
      <subsection name="10 December 2010" date = "10 December 2010" title="Apache UIMA Java SDK 2.3.1 released">
          <p>This release only has the Apache UIMA&#0153; Java SDK, and does not yet have the other
          components.  It is backwards compatible with previous releases, except
          that Java 5 is now the minimum Java level required.</p>
          
        <p>
          This is the first release as a top level project.  
          Not many changes are in this release; included are 
          some fixes for edge cases involving Results Specification,
          a performance fix for the Component Descriptor Editor editing things having
          remote components, and several improvements to the CAS editor. 
          Please see the release notes on the <a href="downloads.cgi">downloads</a> page, for a more complete summary
          and a complete list of changes.
        </p>       
      </subsection>
      
      <subsection name="18 March 2010" date="18 March 2010" title="Apache UIMA graduates from the incubator">
        <p>
          At the ASF board meeting held on 17 March 2010, the Board unanimously approved the proposed resolution to 
          establish the Apache UIMA Project as a top level Apache project.  This signals the successful completion 
          of the incubation process and the beginning of the next phase of Apache UIMA existence.    
        </p>
        <p>
          Becoming a top level project entails setting up some new infrastructure, and moving things. 
          It will take some time to accomplish this move; in the meanwhile, we'll be keeping this website up to date.
        </p>
      </subsection>
      
      <subsection name='26 January 2010' date="26 January 2010" title="UIMA 2.3.0-incubating Released">
        <p>
          This release includes all 4 major components: 
          the UIMA Java SDK, UIMACPP, UIMA-AS (Asynchronous Scalout capability), 
          and a growing set of UIMA Addons.  It is backwards compatable with previous releases, except
          that Java 5 is now the minimum Java level required.</p>
          
          <p>
          The add-ons package contains many new components and annotators.  
          The UIMA-AS (Asynchronous Scaleout)
          framework is extensively enhanced with much more support for error/failure recovery, driven by feedback
          from actual use in several large scale deployments.  The base framework now supports Java 5 generics, and
          is enhanced to make it even more
          light-weight and efficient; for example, it now supports a new network serialization format  
          for communicating with remote
          annotators using a "delta-CAS" - limiting the response sent to just those items which have changed.
          </p>
          <p>
          Please see the release notes on the <a href="downloads.cgi">downloads</a> page, for a more complete summary
          and a complete list of changes.
        </p>       
      </subsection>     
      
      <subsection name='19 March 2009' date="19 March 2009" title="UIMA approved as an OASIS Standard">
        <p>       
          OASIS (<a href="https://www.oasis-open.org" target="_blank" rel="noopener">https://www.oasis-open.org</a>)
          members have approved the 
          Unstructured Information Management Architecture (UIMA) version 1.0 
          as an OASIS Standard, a status that signifies the highest level of ratification. 
        </p>
        <p>See <a href="https://www.oasis-open.org/news/oasis-news-2009-03-19.php" target="_blank" rel="noopener">https://www.oasis-open.org/news/oasis-news-2009-03-19.php</a></p>
      </subsection>     

      <subsection name='29 December 2008' date="29 December 2008" title="UIMA C++ Framework Released">
        <p>        
          The UIMA C++ Framework enables creation of UIMA compliant Analysis Engines 
          from programs written in C++, Perl, Python and Tcl. These components can be
                                        developed and tested without any Java programming.
                                        See a short introduction on <a href="https://github.com/apache/uima-uimacpp">Getting Started: UIMA C++ Framework</a>.
        </p>
      </subsection>

      <subsection name='12 August 2008' date="12 August 2008" title="UIMA CAS Editor Released">
        <p>
          UIMA Cas Editor is an annotation tool which supports manual and automatic 
                              annotation (via running UIMA annotators) of CAS files. 
                    Downloads of the project can be found on
                    <a href="downloads.cgi">
                      our download page.
                    </a>
        </p>
      </subsection>
      
      <subsection name='24 July 2008' date="24 July 2008" title="UIMA Asynchronous Scaleout (UIMA-AS) Released">
        <p>  
          UIMA AS is the next generation scalability replacement for the Collection Processing Manager (CPM).
                                        UIMA AS provides more flexible and powerful scaleout capability, and extends support
                                        to the UIMA components not supported by the CPM,
                                        the flow controller and CAS multiplier. UIMA components can be run within UIMA AS
                                        with no code or component descriptor changes.
                                        See more on the documentation page <a href="doc-uimaas-what.html">Getting Started: UIMA Asynchronous Scaleout</a>.
        </p>
      </subsection>

      <subsection name='16 July 2008' date='16 July 2008' title='Hotfix-1 for UIMA core 2.2.2-incubating Released'>
        <p>
          This fixes memory issues with the UIMA CAS noted in 
          <a href="https://issues.apache.org/jira/browse/UIMA-1067">Jira issue 1067</a> and
          <a href="https://issues.apache.org/jira/browse/UIMA-1068">Jira issue 1068</a>.
                The hotfix consists of one zip file, which contains a replacement for the 
                uima-core.jar and a README with some install and usage instructions.
        </p>
      </subsection>

      <subsection name='07 May 2008' date='07 May 2008' title='Version 2.2.2-incubating Released'>
        <p>
          The Apache UIMA version 2.2.2-incubating has been released!
          For a list of all fixed issues, please refer to the 
          <a href="https://downloads.apache.org/uima/RELEASE_NOTES-uimaj-2.2.2-incubating.html">Release Notes</a>.
          Downloads of the bugfix release can be found on
          <a href="downloads.cgi">our download page.</a>
        </p>
      </subsection>

      <subsection name='19 December 2007' date='19 December 2007' title='Version 2.2.1-incubating Released'>
        <p>
          The Apache UIMA version 2.2.1-incubating has been released!
          Downloads of the bugfix release can be found on
          <a href="downloads.cgi">
            our download page.
          </a>
        </p>
      </subsection>

      <subsection name='23 August 2007' date='23 August 2007' title='Version 2.2.0-incubating Released'>
        <p>
          Version 2.2.0-incubating has been released!
          Downloads of the project can be found on
          <a href="downloads.cgi">
            our download page.
          </a>
        </p>
      </subsection>

      <subsection name='7 April 2007' date='7 April 2007' title='Hotfix-1 for 2.1.0 Component Description Editor (CDE) Released'>
        <p>
          A "hotfix" for the Component Descriptor Editor, an Eclipse plugin used when editing UIMA descriptors,
          has been released.  This fixes functionality problems noted in 
          <a href="https://issues.apache.org/jira/browse/UIMA-364">Jira issue 364</a>.
          This hotfix consists of one zip file, which, when unzipped, constitutes a replacement for the Eclipse 
          plugin.  It includes a README-HOTFIX-1 file describing how to install it.
        </p>
      </subsection>
      
       <subsection name='14 March 2007' date='14 March 2007' title='Version 2.1.0-incubating Released'>
        <p>
          Version 2.1.0-incubating has been released!
          Downloads of the project can be found at 
          <a href="downloads.cgi">https://uima.apache.org/downloads.cgi</a>
        </p>
      </subsection>
      
      <subsection name='20 December 2006' date='20 December 2006' title='GLDV conference workshop (Germany)'>
        <p>We are pleased announce a UIMA workshop at the <a href="https://www.sfb441.uni-tuebingen.de/gldv2007/index.en.html">GLDV 2007 spring conference</a>
        in beautiful <a href="https://www.tuebingen.de/en/1559.html">Tï¿½bingen</a>, Germany.  
        Please see the <a href="gldv07.html">full announcement</a>
        for further details.
        </p>
      </subsection>
      
      <subsection name='13 December 2006' date='13 December 2006' title='ApacheCon 2007 Europe coming up'>
        <p><a href="https://apachecon.com/2007/EU/index.html/e=MjAwNy9FVQ">ApacheCon 2007 Europe</a>
        is coming up.  We are hoping to have some UIMA attendance
        there, although we have no concrete plans as of now.  Watch this space.  If you would
        like to meet with
        UIMA folks there, drop us a line on uima-dev!
        </p>
      </subsection>
      
      <subsection name='07 December 2006' date='7 December 2006' title='UIMA Sandbox established'>
        <p> 
          The UIMA sandbox is a workspace that is open to all UIMA committers and developers who would 
          like to contribute code and join the UIMA developer community on Apache. Details about the 
          sandbox can be found <a href="sandbox.html">here</a>.
        </p>
      </subsection>
      
      <subsection name='05 October 2006' date='5 October 2006' title='UIMA enters Apache Incubator'>
        <p>
          UIMA has been accepted into the Apache Incubator by the Apache Inbubator PMC. Work begins on 
          converting the previous code base to Apache standards.
        </p>
      </subsection>
    </section>
  </body>
</document>

