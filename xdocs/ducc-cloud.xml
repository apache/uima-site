<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
	Licensed to the Apache Software Foundation (ASF) under one
	or more contributor license agreements.  See the NOTICE file
	distributed with this work for additional information
	regarding copyright ownership.  The ASF licenses this file
	to you under the Apache License, Version 2.0 (the
	"License"); you may not use this file except in compliance
	with the License.  You may obtain a copy of the License at
	
	https://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing,
	software distributed under the License is distributed on an
	"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, either express or implied.  See the License for the
	specific language governing permissions and limitations
	under the License.
-->

<document>

	<properties>
		<title>Running UIMA DUCC in a Cloud environment</title>
		<author email="dev@uima.apache.org">
			Apache UIMA Team
		</author>
	</properties>

	<body>
		<section
			name="DUCC in Clouds">
			<subsection name="Preliminary">
				<p>
					This page collects information on running DUCC
					in Cloud environments.  
				</p>
				
				<p>It is preliminary, and is missing details.  
				   Nevertheless, it may have some potentially useful references and ideas.
				   More will be added as it becomes available.</p>
			</subsection>   
			
			<subsection name="External Links">
			  <ul>
			    <li><p>
			      <a target="_blank" rel="nofollow noopener"
			        href="https://github.com/aleksey-hariton/uima-ducc-docker">
			          https://github.com/aleksey-hariton/uima-ducc-docker</a>
			          is a github repository with one approach.
			    </p></li>
			  </ul>
			</subsection>
			
			<subsection name="Considerations">
			  <p style="margin-left: 2rem">NOTE: This information is from an email to the uima-dev list by one of the DUCC committers.
			  In this email, they reference a "glusterfs" which is a shared file system cross mounted
			  on various machines.  This "shared file system" approach is the conventional way DUCC is
			  configured, but it can be configured without a shared file system; see the DUCC docs.</p>
			  
			  <p>We've been running DUCC in a cloud environment for almost a year now. The
DUCC master and a
<a target="_blank" rel="nofollow noopener"
href="https://www.google.com/search?q=glusterfs">glusterfs</a> 
servers run on bare metal and all of the
workstations and worker machines run on VMs. Cluster users add VMs to the
cluster as needed. A job can be started on one more workers and then
additional VMs dynamically added to which the job will automatically scale
out to use. A common system image is maintained on all VM machines via an
LDAP server and shared filesystem data. Users belong to groups and share
machines allocated by members of the group.
</p>
<p>
A DUCC VM-image is used to automatically connect new VMs to the DUCC master
and glusterfs. The DUCC master configuration may be updated anytime, for
example to add new groups or even update master software. VMs automatically
sync DUCC software and configuration each time they start their DUCC agent.
The VM image supports three different machine types: a graphical
workstation, a CPU worker and a GPU worker (used typically for deep learning
training). DUCC spawns work on specified
worker machine types and even specific machines. Workstations are optional
as DUCC requests can be submitted from worker machines. Docker images are
supported using <a target="_blank" rel="nofollow noopener"
href="https://www.google.com/search?q=podman">Podman</a>.  Podman runs rootless and only allows access to all
mounted file systems with user credentials.
</p>
<p>

In order to keep some level of data security, a group directory is only
mounted on the VMs created by members of the group. Individual users
maintain file permissions as desired, but, as anyone that creates a VM has
root access, they could become any other user and access data from other
group members.There is a self-service glusterfs webapp that is used to
export group data to new VMs and manage quotas.
</p>
<p>

The VM-image builder and glusterfs webapp are not yet part of Apache DUCC.

</p>
			</subsection>
		</section>
	</body>

</document>

