<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<document>

<properties>
<title>Checklist: Release</title>
<author email="dev@uima.apache.org">UIMA Documentation Team</author>
</properties>

<body>

<section name="Checklist: Release">
  
<ol>
  <li>Do <a href="one-time-release-setup.html">one-time setup</a> required for releasing.</li>
  <li>Finish up any changes, close Jiras, assign Jiras to proper release(s).</li>
  <!--li>(If remerging a branch:  Note- best to do these if possible at the root of aggregations, 
    outside of Eclipse, so svn "batching" can work - will be quite a bit fraster)
    <ol><li>update branch working copy to head</li>
      <li>merge trunk head -> working copy (fully recursive)</li>
      <li>commit</li>
      <li>switch working copy to trunk (fully recursive)</li>
      <li>merge reintegrate branch -> trunk</li>
      <li>commit</li>
      <li>(cleanup at end- delete the old branch)</li>
    </ol>
  </li-->
  <p>More details on next steps are 
    <a href="http://maven.apache.org/developers/release/apache-release.html">here</a></p>
  <ol>
    <p>Release one or more artifacts into the Apache Nexus staging repository.
      You can do multiple release:prepare/perform steps, with subsequent steps
      depending on the previous artifacts in their "release" version.</p>
    <li>Do next steps in top release artifact (single module, or mult-module top project).
      <ol>
        <p>Release one or more artifacts into the staging repo.</p>     
        <li>Scan poms to be sure there are <b>no</b> unintentional -SNAPSHOTs</li>.   
        <li><code>mvn release:prepare -DdryRun</code> and diff the resulting poms
          to verify nothing unintentional is dropped or updated incorrectly</li>
          For multi-module projects, where all the submodules have the same version, use: <br/>
          <code>mvn release:prepare -DdryRun -DautoVersionSubmodules</code>.
        <li><code>mvn release:clean</code> to restore projects</li>
        <li><code>mvn deploy</code> to deploy snapshot</li>
        <li><code>mvn release:prepare [-DautoVersionSubmodules]</code>. 
        Try to accept the default suggestions for names; you might change the SVN tag to include a "-rc1"
        suffix indicating a release candidate number.</li>
        <li><code>mvn release:perform</code></li>      
      </ol>
    </li>
    <li>Repeat above steps for all things being released in one go (not already in an aggregate).</li>
    <li>login to <a href="https://repository.apache.org">https://repository.apache.org</a>
      using your Apache LDAP credentials, find the staging artifact, and right click - "close" it
      after all things that are being included in this release are present.</li> 
    <!--li>Update the trunk: for all references that should now refer to the staged release version
    </li>
    <li>build/test these</li>
    <li>commit trunk</li-->  
  </ol>
  <!--li>
    Repeat above steps for all sets of dependent things where you need to update the dependencies to
    depend on the release version of previous steps.  When you're done, you will have 1 or more
    "closed" staging repositories, each having a unique URL.
  </li-->
  <li>Send [VOTE] message to dev list.  List the staging repository that testers
    will need to add to their <code>settings.xml</code> files.</li>
  <li>Post RESULT message, promote the release(s) from the staging repositories</li>
  <li>Update Jira version info to reflect the release status and date</li>
  <li>After release appears on maven central, post an appropriate announce letter</li>
  <li>Add release to next Board report</li>
  <li>Celebrate :-)</li>
</ol>
</section>

</body>
</document>
