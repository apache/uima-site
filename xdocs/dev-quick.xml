<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<document>

<properties>
<title>Quick Start for working with Source Code</title>
<author email="dev@uima.apache.org">
 Apache UIMA Documentation Team</author>
</properties>

<body>
<section name="Do the one-time-setup">
<p>To work with the source code, start by doing the 
<a href="one-time-setup.html">one-time setups</a>.
</p>
</section>

<section name="Checkout and Build UIMA SDK">
<p>To build all of the Apache UIMA Java SDK
(including the docbooks and the binary assembly) and install these artifacts 
to your local maven repository, do the following:
<ul>
<li><code>svn checkout https://svn.apache.org/repos/asf/uima/uimaj/trunk /myWorkingCopy</code></li>
<li><code>cd /myWorkingCopy/uimaj</code></li>
<li><code>mvn install</code></li>
</ul>
</p>
<p class="note">Note: if you're using windows, 
change the directory separator to backslash (but keep it forward for the url).</p>

<p>If you're looking for the lib containing all the built Jars, <code>cd ../uimaj-distr/target</code>
and unzip/untar the binary distribution artifact, named something like
<code>uimaj-[version]-bin.zip or uimaj-[version]-bin.tar.gz</code>.
Then, look inside the unpacked result for a lib directory - it will have the Jars that were built.
</p>
</section>

<section name="Checkout and Build UIMA-AS">
<p>The build for UIMA-AS depends on the UIMA SDK, so build that first,
following the directions above.
</p>
<p>Then, to build UIMA-AS
(including the docbooks and the binary assembly) and install these artifacts 
to your local maven repository, do the following:
<ul>
<li><code>svn checkout https://svn.apache.org/repos/asf/uima/uima-as/trunk /myWorkingCopyAS</code></li>
<li><code>cd /myWorkingCopyAS/uima-as</code></li>
<li><code>mvn install</code></li>
</ul>
</p>
</section>

<section name="Checkout and Build an Addons (Sandbox) project">
<p>
<ul>
<li><code>svn checkout https://svn.apache.org/repos/asf/uima/addons/trunk /myWorkingCopyAddons</code></li>
<li><code>cd /myWorkingCopyAddons</code></li>
<li><code>mvn install</code></li>
</ul>
</p>

<p>To check out just one of the addons and build it, say, the WhitespaceTokenizer, do:<a></a>
<ul>
<li><code>svn checkout https://svn.apache.org/repos/asf/uima/addons/trunk/WhitespaceTokenizer /myWorkingCopyWhitespaceTokenizer</code></li>
<li><code>cd /myWorkingCopyWhitespaceTokenizer</code></li>
<li><code>mvn install</code></li>
</ul>
</p>
</section>

<section name="Checkout and Build UIMA C++ SDK">
<p>
Checkout the source code as follows:
<ul>
<li><code>svn checkout https://svn.apache.org/repos/asf/uima/uimacpp/trunk /myWorkingCopyUimacpp</code></li>
</ul>
</p>
<p>
UIMACPP runtime prerequisites are APR, ICU, Xerces-C, ActiveMQ-cpp,
APR-Util and a JDK for building the JNI interface. The SDK also
requires doxygen for building the documentation.
</p>
<p>
To build the SDK, all prerequisites need to be built from source. 
Alternatively UIMACPP can be built and installed on a machine with all the prerequisites available in system directories. 
In this case the prerequisites can be installed from binary distributions.
</p>
<subsection name="Building on Unix">
<p>
To build and install on a machine with prerequisites available in system directories:
</p>
<ul>
<li><code>cd /myWorkingCopyUimacpp</code></li>
<li><code>./configure --with-jdk=location_of_jni.h [other options]</code></li>
<li><code>make</code></li>
<li><code>make check</code></li>
</ul>
<p>
For a full SDK build,
<ul>
<li>
<code>./configure --with-apr=loc_of_apr_install --with-icu=loc_of_icu_install --with-xerces=loc_of_xerces_install --with-activemq=loc_of_amq_install --with-apr-util=loc_of_apr-util_install</code>
</li>
<li><code>make install</code></li>
<li><code>make sdk TARGETDIR="loc_of_sdk_tree [clean]"</code></li>
</ul>
</p>
<p>
For a build of UIMACPP without UIMA-AS support, specify the option
<code>--without-activemq</code>. The options <code>--with-activemq</code> and <code>--with-apr-util</code> can be left out.
</p>
</subsection>
<subsection name="Building on Windows">
<p>
To build an SDK all prerequisite components, APR, ICU, Xerces-C,
ActiveMQ-cpp and APR-Util must first be built on the machine, and a
JDK installed. The location of the dependencies must be set in
environment variables APR_HOME, ICU_HOME, XERCES_HOME, ACTIVEMQ_HOME,
APU_HOME and JAVA_INCLUDE.
</p>
<ul>
<li><code>cd /myWorkingCopyUimacpp</code></li>
<li><code>winmake /build release (or debug)</code></li>
<li><code>cd src\test</code></li>
<li><code>devenv test.sln /build release</code></li>
<li><code>fvt</code></li>
<li><code>cd /myWorkingCopyUimacpp/docs</code></li>
<li><code>builddocs</code></li>
<li><code>buildsdk "target_dir [clean]"</code></li>
</ul>
</subsection>

<p>For more details on platform specific build issues and on the dependencies, see
<a href="doc-uimacpp-build.html">UIMA C++ Building from source</a>.
</p>
</section>
</body>
</document>
