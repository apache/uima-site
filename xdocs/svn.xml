<?xml version="1.0" encoding="UTF-8"?>

<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<document>

<properties>
<title>Source Code</title>
<author email="dev@uima.apache.org">
 Apache UIMA Documentation Team</author>
</properties>

<body>

<section name="Apache UIMA&#0153; Source Code">
<p>
  <ul>
		<li><a href="#source.code.repository">Source Code Repository</a>
			
		<br></br>
		</li>
		<li><a href="#git-projs">Using Git</a></li>
		<li><a href="#checkout.code">Checking Out Code Using Subversion</a>
			<ul>
				<li><a href="#anonymous.checkout">Anonymous check out from Subversion</a></li>
				<li><a href="#access.firewall">Access from behind a firewall</a></li>
				<li><a href="#access.proxy">Access through a proxy</a></li>
				<li><a href="#committer.access">Committer access</a></li>
				<li><a href="#checkout.using.eclipse">Checking Out Code using Eclipse</a></li>
			</ul>
		<br></br>	
		</li>
		<li><a href="#submit.code.changes">Submitting Code Changes</a>
			<ul>
				<li><a href="#submitting.patch">Submitting a patch</a></li>
				<li><a href="#committing.changes">Committing changes to subversion</a></li>
			</ul>
    </li>
        <li><a href="#source.code.repository.web.access">Web Access to Subversion</a></li>
     <!-- 
        <li><a href="#building.with.maven">Building UIMA from Source</a>
			<ul>
				<li><a href="#building.command.line">Building from the command line</a></li>
				<li><a href="#building.eclipse">Building from Eclipse</a></li>
				<li><a href="#test.failure">What to do if the tests fail</a></li>
				<li><a href="#build.distribution">How to build the full Apache UIMA distribution</a></li>
				<li><a href="#building.docbooks">Building uima-docbooks</a></li>
			</ul>
        </li>
       -->
    
      </ul>
</p>
</section>

<section name="Source Code Repository" id="source.code.repository">

<p>Apache UIMA uses 
<a  class="external" rel="nofollow noopener" target="_blank" href="https://subversion.apache.org">
Subversion</a> and
<a class="external" rel="nofollow noopener" target="_blank" href="https://github.com/apache">
Git</a> 
to manage its source code.  uimaj, uimaFIT, and uima-cpp have moved to GIT, the other projects are in SVN.
</p>


<p>
  The code for UIMA is stored in several repositories:</p>
  <ol>
    <li>addons - a collection of add-ons for UIMA including annotators</li>
    <li>sandbox - a collection of new things for UIMA, not yet released</li>
    <li>uimacpp - the C++ framework supporting Annotators written in C++</li>
    <li>build - Build information and configurations used in building from sources</li>
  </ol>
<p>  
  Each of these have multiple branches: trunk or master - for the latest, tags - for preserved copies of releases, 
  and branches for special development efforts. 
</p>

<p>
To receive notice of commits to the repository subscribe to 
<a  href="mailto:commits@uima.apache.org">
commits@uima.apache.org</a> by sending email to 
<a  href="mailto:commits-subscribe@uima.apache.org">
commits-subscribe@uima.apache.org</a>. 
</p>


<h2 id="git-projs">UIMA projects in GIT</h2>
  <p>The UIMA projects 
  <a class="external" rel="nofollow noopener" target="_blank" href="https://github.com/apache/uima-uimaj">uimaj</a>,
  <a class="external" rel="nofollow noopener" target="_blank" href="https://github.com/apache/uima-uimacpp">uimacpp</a>, and
  <a class="external" rel="nofollow noopener" target="_blank" href="https://github.com/apache/uima-uimafit">uimaFIT</a>
  are at github in the apache organization.  More information
  on GIT use is <a rel="nofollow noopener" target="_blank" href="git.html">git.html</a>.
</p>



<subsection name="Web Access to Subversion" id="source.code.repository.web.access">
<p>See <a href="one-time-setup.html#svn-setup">SVN setup</a> for details on how to setup SVN.</p>

<p>
If you just want to browse the source code in SVN, you can use the
<a class="external" rel="nofollow noopener" 
href="https://svn.apache.org/viewvc/uima">
viewvc web interface</a> to Subversion.  This is current at all times.
</p>
</subsection>
</section>

<section name="Checking Out Code Using Subversion" id="checkout.code">

<p>Anyone can check code out of Subversion.  Username and password 
  are only needed to update the Subversion repository; only
UIMA committers can do that.
If you are a committer, are working from behind a firewall, or are 
connected to the internet through a proxy server, please see the sections 
below for more information.
</p>

<subsection name="Anonymous check out from Subversion" id="anonymous.checkout">
<p>Use a command like:</p>
  <longquote><code>% svn checkout https://svn.apache.org/repos/asf/uima/uimaj/trunk</code></longquote>
<p>Once you have Apache UIMA checked out you can update your working copy
  of the checked-out sources, to pick up any changes committed since you
  checked things out, 
  by executing the following command from within the UIMA directory. </p>
<longquote><code>% svn update</code></longquote>
</subsection>
<subsection name="Access from behind a firewall" id="access.firewall">

<p>For those users who are behind a corporate firewall which is 
blocking http access to the Subversion repository, you can try to access it 
via HTTPS: </p>
<longquote><code>% svn checkout https://svn.apache.org/repos/asf/uima/uimaj/trunk</code></longquote>
</subsection>
<subsection name="Access through a proxy" id="access.proxy">

<p>The Subversion client can go through a proxy, if you configure it 
to do so. First, edit your "servers" configuration file to indicate which 
proxy to use. The location of this configuration file depends on your operating system. 
On Linux or Unix it is located in the directory "~/.subversion". 
On Windows it is in "%APPDATA%\Subversion". (Try "echo %APPDATA%", 
note this is a hidden directory.) </p>
<p>There are comments in the file explaining what to do. If you don't have 
that file, get the latest Subversion client and run any command; this will 
cause the configuration directory and template files to be created. 
</p>
<p>Example : Edit the 'servers' file and add something like : 
</p>
<longquote><pre>
[global]
http-proxy-host = your.proxy.name
http-proxy-port = 3128
</pre></longquote>

</subsection>

<subsection name="Committer access" id="committer.access">

<p>Everyone can access the Apache UIMA Subversion repository via HTTPS. 
Apache UIMA Committers must checkout the Subversion repository 
via HTTPS (not HTTP), in order to be able to check in changes. 
</p>
<longquote><code>% svn checkout https://svn.apache.org/repos/asf/uima/uimaj/trunk</code></longquote>
</subsection>
	
</section>

<section name="Submitting Code Changes" id="submit.code.changes">
<subsection name="Submitting a patch" id="submitting.patch">

<p>If you make changes to Apache UIMA, and would like to contribute 
this to the project, you should open a JIRA issue and discuss the changes 
with the developer community. If there is agreement,
create a patch and attach it to the JIRA issue.
</p>
<p>
To create a patch, use the Eclipse Team <code>-></code> Create Patch command 
select the project in the Package Explorer, right click it to find 
the Team menu in the context menu).  Or, use the command line and
execute the svn diff command. This creates a patch that
can easily be uploaded to a JIRA issue. A good name for the patch includes
the JIRA issue name, e.g. UIMA-104.patch. If there are several patches
for the same JIRA issue, you might include a short identifying 
  description, or your initials, e.g.
UIMA-104.clr.patch 
</p>
<longquote><pre>
% svn diff &gt; UIMA-104.clr.patch
</pre></longquote>
</subsection>

<subsection name="Committing changes to subversion" id="committing.changes">
<p>
To commit changes to the subversion repository, you must be an Apache 
UIMA committer.  See <a href="get-involved.html">get involved</a> 
for information on how to become a committer and how to set up your 
password once you become a committer.
</p>

<p>
Once your password is set, you can commit from Eclipse using the 
<code>Team -> commit</code> context menu.  You can do this on an individual file,
a set of files or directories (multi-select), or on whole project(s).
You can also commit from the command line like this:
</p>
<longquote><pre>
$&gt; svn commit --username your-username \
 Authentication realm: &lt;https://svn.apache.org:443&gt; \
 ASF Committers Password for 'your-username': your-password
</pre></longquote>
<p>You can also pass your password on the command line directly, but 
this is a security problem on multiuser unix computers (the command line 
arguments are available via the ps command).  Here is the command if you 
are Windows or a single user unix computer: 
</p>
<longquote><pre>
$&gt; svn commit --username your-username \
  --password your-password
</pre></longquote>
<p>Remember to replace 'your-username' and 'your-password' with 
your actual username and password on svn.apache.org. 
</p>
<p>
Please also add to your commit statement an appropriate message that explains the changes you did.
You can add a message when adding <code>--message</code> to your commit statement:
</p>
<longquote><pre>
$&gt; svn commit --username your-username \
  --password your-password --message your-message
</pre></longquote>
<p>
Please always enter the JIRA issue key or keys (if more than one issue) and optionally, the JIRA issue link
to the commit message. The issue key (e.g., UIMA-555) is important so that the JIRA SVN plugin can detect the
changes automatically. Only specifying the issue link does not work correctly, for details
please see the JIRA issue <a  class="external" rel="nofollow noopener" href="https://jira.atlassian.com/browse/SVN-37">
https://jira.atlassian.com/browse/SVN-37</a>.
</p>
</subsection>
</section>
</body>
</document>
