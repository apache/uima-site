<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<document>

  <properties>
    <title>GIT Conventions for UIMA projects</title>
    <author email="dev@uima.apache.org"> Apache UIMA Documentation Team</author>
  </properties>

  <body>

    <section name="Git Conventions">
    
    <p>This describes various conventions and the reasons behind them, concerning use of GIT.</p>
    
    <h3>Branch naming</h3>
    
    <h4>master</h4>
    
      <p>This is the main branch where things are merged into, and from time to time, releases are made from.</p>
      <p>Some project may have multiple branches.  These typically reflect on-going versions being developed together.</p>
    
    <h4>branches for working</h4>
      <p>Work is done in a branch.  This because the master(s) are protected, which means they cannot be "pushed" to, 
        but rather, a change must be pulled from a branch via a pull request.</p>
        
      <p>Branches for working are typically named using the Jira issue (if there is one) associated with the work, 
        followed by a very-short-description - enough to remind you what that jira number is about.
        In addition, the name can be prefixed with the kind of work it is, e.g. <code>feature/</code> or <code>bugfix</code>.
        This can be useful in enabling you to more rapidly locate the right branch.</p>
          
      <p>After merging into master, the branch is typically deleted.</p>   
      
    <h4>Git merge styles</h4>
      <p>Different projects may use different merge styles.</p>   
      <p>See these links for references to common work patterns.</p>   
    </section>
    
  </body>
</document>